a:29:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:13:"BlueprintPure";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:162:"둘다 블루 프린트에서 호출이 가능한 함수이다. 다른점이 있다면 반복문과 같은 곳에서 해당 함수를 2번 이상 호출할 경우";}i:2;i:29;}i:5;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:191;}i:6;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:191;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"1. ";}i:2;i:193;}i:8;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:196;}i:9;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"BlueprintPure";}i:2;i:198;}i:10;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:211;}i:11;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:112:"형은 내부 리턴 값의 변경이 일어나면 다른 값을 리턴한다. BlueprintPure형은 리턴값이 ";}i:2;i:213;}i:12;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:325;}i:13;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"필수";}i:2;i:327;}i:14;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:333;}i:15;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"이다.";}i:2;i:335;}i:16;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:342;}i:17;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:342;}i:18;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:205:"2. 반면 비BlueprintPure함수는 아웃풋 핀에 리턴 값을 저장해 두었다가 실행하기 때문에 같은 값을 리턴한다. 비BlueprintPure함수는 void형 함수 사용이 가능하다.";}i:2;i:344;}i:19;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:549;}i:20;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:549;}i:21;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:63:"3. 따라서 계산이 빠르고 자주 변경되는 값에는 ";}i:2;i:551;}i:22;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:614;}i:23;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"BlueprintPure";}i:2;i:616;}i:24;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:629;}i:25;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:124:"함수가 더 적합하고 값을 변경하지 않는 경우 비BlueprintPure함수를 사용하는 것이 더 적합하다.";}i:2;i:631;}i:26;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:755;}i:27;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:756;}i:28;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:756;}}