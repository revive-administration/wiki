a:27:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:21:"7.클래스와 모듈";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:420:"루비에서 모든 값은 객체입니다. 모든 객체는 클래스의 인스턴스 입니다. 클래스는 객체가 응답하는 메서드를 정의합니다. 클래스는 다른 클래스를 확장, 즉 그 클래스의 서브 클래스가 될 수 있어서 슈퍼클래스의 메서드를 상속한다든지 재정의합니다. 클래스는 모듈을 포함(모듈의 메서드를 상속)할 수도 있습니다. ";}i:2;i:36;}i:5;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:456;}i:6;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:661:"
루비의 객체는 엄격하게 캡슐화되어 있습니다. 객체의 상태는 객체가 정의하는 메서드를 통해서만 접근 가능합니다. 이런 메서드로 조작하는 인스턴스 변수는 객체의 밖에서는 직접 조작할 수 없습니다. 객체의 상태에 직접 접근하는 것처럼 보이는 getter, setter라는 접근 메서드를 정의할 수 있지만, 두 접근 메서드는 속성(attribute)이라 불리며 인스턴스 변수와는 구별됩니다. 클래스가 정의하는 메서드의 가시성에는 public, protected, private 세 종류가 있고 어디에서 어떻게 불리는가에 영향을 줍니다. ";}i:2;i:458;}i:7;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:1119;}i:8;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:293:"
객체의 상태가 이렇듯 엄격하게 캡슐화되어 있는 것과 반대로 루비의 클래스는 매우 개방적입니다. 임의의 프로그램이 기존 클래스에 메서드를 추가할 수도 있고 각각의 객체에 '싱글톤 메서드'를 추가할 수도 있습니다. ";}i:2;i:1121;}i:9;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:1414;}i:10;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:376:"
루비의 객체지향 아키텍처의 많은 부분은 언어의 핵심 기능입니다. 하지만 속성 작성이나 메서드 가시성의 선언 등은 진짜 언어 키워드가 아니라 메서드에 의해 처리됩니다. 이번 장은 클래스를 어떻게 정의하고 메서드를 어떻게 추가하는가를 설명하는 확장된 안내서로 시작합니다.";}i:2;i:1416;}i:11;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1792;}i:12;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1794;}i:13;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:30:"7.1 단순한 클래스 정의";i:1;i:2;i:2;i:1794;}i:2;i:1794;}i:14;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:1794;}i:15;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1836;}i:16;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:22:"7.1.1 클래스 작성";i:1;i:3;i:2;i:1836;}i:2;i:1836;}i:17;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1836;}i:18;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1836;}i:19;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:58:"루비에서 클래스는 class 키워드로 만듭니다.";}i:2;i:1868;}i:20;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1927;}i:21;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:15:"class Point
end";}i:2;i:1927;}i:22;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1927;}i:23;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:509:"루비의 대다수 언어 요소와 마찬가지로 클래스 정의 끝에는 end 키워드가 옵니다. class 키워드로는 새로운 클래스를 정의할 수도 있고, 그 클래스를 참조하는 새로운 상수를 작성할 수도 있습니다. 클래스명과 상수명은 같으므로 모든 클래스명은 첫 글자가 대문자이어야 합니다. class 본문 속이지만 클래스가 정의하는 인스턴스 외부에서 self 키워드는 정의하려는 클래스를 나타냅니다.";}i:2;i:1949;}i:24;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2458;}i:25;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2460;}i:26;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:2460;}}