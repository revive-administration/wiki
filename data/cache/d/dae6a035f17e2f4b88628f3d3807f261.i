a:46:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:17:"RESTful 서비스";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:115:"HTTP 요청의 성격을 그대로 사용해 데이터의 생성, 조회, 수정, 삭제 작업을 수행하는 것";}i:2;i:33;}i:5;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:148;}i:6;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:150;}i:7;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:55:"REST 아키텍처에 적용되는 6가지 제한 조건";i:1;i:2;i:2;i:150;}i:2;i:150;}i:8;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:150;}i:9;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:150;}i:10;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:98:"다음 제한 조건을 준수하는 한 개별 컴포넌트는 자유롭게 구현할 수 있다.";}i:2;i:219;}i:11;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:317;}i:12;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:317;}i:13;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:317;}i:14;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:317;}i:15;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:88:" 클라이언트/서버 구조 : 일관적인 인터페이스로 분리되어야 한다.";}i:2;i:321;}i:16;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:409;}i:17;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:409;}i:18;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:409;}i:19;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:409;}i:20;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:113:" 무상태(Stateless) : 각 요청 간 클라이언트의 콘텍스트가 서버에 저장되어서는 안된다.";}i:2;i:413;}i:21;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:526;}i:22;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:526;}i:23;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:526;}i:24;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:526;}i:25;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:115:" 캐시 처리 가능(Cacheable) : WWW에서와 같이 클라이언트는 응답을 캐싱할 수 있어야 한다.";}i:2;i:530;}i:26;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:645;}i:27;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:645;}i:28;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:645;}i:29;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:645;}i:30;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:321:" 계층화(Layered System) : 클라이언트는 보통 대상 서버에 직접 연결되었는지, 또는 중간 서버를 통해 연결되었는지를 알 수 없다. 중간 서버는 로드 밸런싱 기능이나 공유 캐시 기능을 제공함으로써 시스템 규모 확장성을 향상시키는 데 유용하다.";}i:2;i:649;}i:31;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:970;}i:32;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:970;}i:33;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:970;}i:34;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:970;}i:35;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:201:" Codde on demand(optional) : 자바 애플릿이나 자바스크립트의 제공을 통해 서버가 클라이언트가 실행시킬 수 있는 로직을 전송하여 기능을 확장시킬 수 있다.";}i:2;i:974;}i:36;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1175;}i:37;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1175;}i:38;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1175;}i:39;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1175;}i:40;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:190:" 인터페이스 일관성 : 아키텍처를 단순화시키고 작은 단위로 분리함으로써 클라이언트-서버의 각 파트가 독립적으로 개선될 수 있도록 해준다.";}i:2;i:1179;}i:41;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1369;}i:42;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1369;}i:43;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:1369;}i:44;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1369;}i:45;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:1369;}}