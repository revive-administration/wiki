a:299:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:20:"Intro to refactoring";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:37;}i:4;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:15:"1. Introduction";i:1;i:2;i:2;i:37;}i:2;i:37;}i:5;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:37;}i:6;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:37;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:230:"Focused more on how refactoring and unit testing is supported by tools currently available. By applying multiple iterations of refactoring on the program its design will improve considerably and new features will be easier to add.";}i:2;i:64;}i:8;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:294;}i:9;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:296;}i:10;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:23:"2. What Is Refactoring?";i:1;i:2;i:2;i:296;}i:2;i:296;}i:11;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:296;}i:12;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:332;}i:13;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:14:"2.1 Definition";i:1;i:3;i:2;i:332;}i:2;i:332;}i:14;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:332;}i:15;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:332;}i:16;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:161:"Refactoring :
A change made to the internal structure of software to make it easier to understand and cheaper to modify without changing its observable behavior.";}i:2;i:357;}i:17;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:518;}i:18;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:520;}i:19;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:10:"2.2 Hitory";i:1;i:3;i:2;i:520;}i:2;i:520;}i:20;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:520;}i:21;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:520;}i:22;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:241:"Although the methodology can be used with almost every programming language, object-oriented languages make things easier. This is specially ture for the more complex refactorings, which rely heavily on objects, inheritance and polymorphism.";}i:2;i:541;}i:23;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:782;}i:24;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:784;}i:25;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:27:"2.3 Why Refactoring matters";i:1;i:3;i:2;i:784;}i:2;i:784;}i:26;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:784;}i:27;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:784;}i:28;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:180:"About 50% of all programming effort in most enterpises goes into maintaining software. Refactoring will help to improve the design, make the code easier to understand and maintain.";}i:2;i:822;}i:29;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1002;}i:30;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1004;}i:31;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:15:"3. Unit Testing";i:1;i:2;i:2;i:1004;}i:2;i:1004;}i:32;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:1004;}i:33;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1004;}i:34;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:1032;}i:35;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:80:"Software features that can't be demonstrated by automated tests simply don exist";}i:2;i:1033;}i:36;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:1113;}i:37;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1114;}i:38;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1114;}i:39;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:176:"It is not component testing, which is interested whether the application behaves generally the way it was specified it should. See for further information about the difference.";}i:2;i:1116;}i:40;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1292;}i:41;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1294;}i:42;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:28:"3.1 Why testing is important";i:1;i:3;i:2;i:1294;}i:2;i:1294;}i:43;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1294;}i:44;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1294;}i:45;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:237:"Whether you like Extreme Programming or not, tests have been proven to be the methodology to ultimately control if the changes you just made to your code introduced bugs. Because refactoring is all about changing code, testing is a must.";}i:2;i:1333;}i:46;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1570;}i:47;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1572;}i:48;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:23:"3.2 The JUnit Framework";i:1;i:3;i:2;i:1572;}i:2;i:1572;}i:49;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1572;}i:50;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1607;}i:51;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:16:"3.2.3 Assertions";i:1;i:4;i:2;i:1607;}i:2;i:1607;}i:52;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:1607;}i:53;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"ul";i:2;s:16:" class="extlist"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:1631;}i:54;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:1631;}i:55;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:1631;}i:56;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:1;i:3;s:5:"
  * ";}i:2;i:1631;}i:57;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"assertEquals";}i:2;i:1636;}i:58;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:12:"assertEquals";}i:2;i:1636;}i:59;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:1648;}i:60;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:1648;}i:61;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:1648;}i:62;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:1648;}i:63;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:1648;}i:64;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"assertFalse";}i:2;i:1653;}i:65;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:11:"assertFalse";}i:2;i:1653;}i:66;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:1664;}i:67;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:1664;}i:68;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:1664;}i:69;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:1664;}i:70;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:1664;}i:71;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"assertNotNull";}i:2;i:1669;}i:72;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:13:"assertNotNull";}i:2;i:1669;}i:73;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:1682;}i:74;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:1682;}i:75;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:1682;}i:76;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:1682;}i:77;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:1682;}i:78;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"assertNotSame";}i:2;i:1687;}i:79;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:13:"assertNotSame";}i:2;i:1687;}i:80;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:1700;}i:81;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:1700;}i:82;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:1700;}i:83;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:1700;}i:84;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:1700;}i:85;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"assertNull";}i:2;i:1705;}i:86;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:10:"assertNull";}i:2;i:1705;}i:87;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:1715;}i:88;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:1715;}i:89;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:1715;}i:90;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:1715;}i:91;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:1715;}i:92;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"assertSame";}i:2;i:1720;}i:93;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:10:"assertSame";}i:2;i:1720;}i:94;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:1730;}i:95;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:1730;}i:96;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:1730;}i:97;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:1730;}i:98;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:1730;}i:99;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"assertTrue";}i:2;i:1735;}i:100;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:10:"assertTrue";}i:2;i:1735;}i:101;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:1745;}i:102;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:1745;}i:103;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:1745;}i:104;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:1745;}i:105;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:1745;}i:106;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"fail";}i:2;i:1750;}i:107;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:4:"fail";}i:2;i:1750;}i:108;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:1754;}i:109;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:1754;}i:110;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"ul";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:1754;}i:111;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:4;i:3;s:1:"
";}i:2;i:1754;}i:112;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1756;}i:113;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:33:"4. Refactoring a concrete example";i:1;i:2;i:2;i:1756;}i:2;i:1756;}i:114;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:1756;}i:115;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1802;}i:116;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:22:"4.1 The starting point";i:1;i:3;i:2;i:1802;}i:2;i:1802;}i:117;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1802;}i:118;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1835;}i:119;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:27:"4.2 Comments of the program";i:1;i:3;i:2;i:1835;}i:2;i:1835;}i:120;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1835;}i:121;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1835;}i:122;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:227:"Rule 1: When you find you have to add a feature to a program, and the program's code is not structured in a convenient way to add the feature, first refactor the program to make it easy to add the feature, then add the feature.";}i:2;i:1873;}i:123;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2100;}i:124;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2102;}i:125;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:44:"5. Steps in refactoring the concrete example";i:1;i:2;i:2;i:2102;}i:2;i:2102;}i:126;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:2102;}i:127;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2159;}i:128;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:23:"5.1 Creating Unit Tests";i:1;i:3;i:2;i:2159;}i:2;i:2159;}i:129;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:2159;}i:130;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2159;}i:131;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:149:"the goal is to keep the observable behavior of a program, even if we change its underlying structure. So a fundamental thing to have are solid tests.";}i:2;i:2193;}i:132;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2342;}i:133;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2342;}i:134;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:116:"Rule2 : Before you start refactoring, check that you have a solid suite of tests. These tests must be self-checking.";}i:2;i:2344;}i:135;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2460;}i:136;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2462;}i:137;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:38:"5.2 Decomposing the statement() method";i:1;i:3;i:2;i:2462;}i:2;i:2462;}i:138;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:2462;}i:139;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2512;}i:140;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:20:"6 Bad Smells in Code";i:1;i:2;i:2;i:2512;}i:2;i:2512;}i:141;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:2512;}i:142;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2512;}i:143;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:180:"Refactoring is centainly not(only) about aesthetics, about beautiful code - so a somewhat solid tem had to be found by Martin Fowler to describe when refactorign should be applied:";}i:2;i:2545;}i:144;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2725;}i:145;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2725;}i:146;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:2727;}i:147;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:23:"If it stinks, change it";}i:2;i:2728;}i:148;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2751;}i:149;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2752;}i:150;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2754;}i:151;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:19:"6.1 Duplicated Code";i:1;i:3;i:2;i:2754;}i:2;i:2754;}i:152;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:2754;}i:153;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2784;}i:154;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:31:"6.2 Long Method and Large Class";i:1;i:3;i:2;i:2784;}i:2;i:2784;}i:155;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:2784;}i:156;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2826;}i:157;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:23:"6.3 Long Parameter List";i:1;i:3;i:2;i:2826;}i:2;i:2826;}i:158;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:2826;}i:159;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2826;}i:160;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:382:"Long parameter lists are hard to understand and usually deliver too much information to the method. With objects, you can always ask another object to get the needed information for you. Using Replace Parameter with Method may be a solution to separate a parameter logically from the others. Alternatively you could pass a special parameter object(a Value Object or Transfer Object)";}i:2;i:2860;}i:161;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3242;}i:162;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3244;}i:163;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:16:"6.4 Feature Envy";i:1;i:3;i:2;i:3244;}i:2;i:3244;}i:164;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:3244;}i:165;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3271;}i:166;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:15:"6.5 Data Clumps";i:1;i:3;i:2;i:3271;}i:2;i:3271;}i:167;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:3271;}i:168;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3271;}i:169;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:169:"It is frequent that the same set of variables are spotted together in various places of the code. Use Extract Class to group together those variables in their own class.";}i:2;i:3297;}i:170;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3466;}i:171;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3468;}i:172;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:26:"6.6 Speculative Generality";i:1;i:3;i:2;i:3468;}i:2;i:3468;}i:173;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:3468;}i:174;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3468;}i:175;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:452:"Sometimes you're implementing handling for special cases that are probably never used. The result are methods which are only called by their own tests and thus only add to the complexity of maintenance and understanding. Replace unnecessary delegation with the code of the delegate(Inline Class), Collapse the Hierarchy if there are abstract classes not doing much. Purge unused parameters, rename methods, fields and classes to achieve sensible names.";}i:2;i:3505;}i:176;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3957;}i:177;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3959;}i:178;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:19:"6.7 Temporary Field";i:1;i:3;i:2;i:3959;}i:2;i:3959;}i:179;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:3959;}i:180;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3959;}i:181;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:98:"Temporary variables can be replaced with the expression used to the set the variable(Inline Temp).";}i:2;i:3989;}i:182;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4087;}i:183;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4089;}i:184;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:18:"6.8 Message chains";i:1;i:3;i:2;i:4089;}i:2;i:4089;}i:185;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:4089;}i:186;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4089;}i:187;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:99:"If you have code like the following snippet, you should consider getting the target object directly";}i:2;i:4118;}i:188;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4217;}i:189;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4219;}i:190;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:26:"6.9 Inappropriate Intimacy";i:1;i:3;i:2;i:4219;}i:2;i:4219;}i:191;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:4219;}i:192;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4219;}i:193;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:320:"Some classes know too much about other classes and should therefore be broken up(use Move Method and Move Field, or extract common code into another class). Subclasses are an example for this misbehavior, because they always know too much about their parent. You can replace the inheritance with delegation in this case.";}i:2;i:4257;}i:194;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4577;}i:195;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4579;}i:196;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:13:"6.10 Comments";i:1;i:3;i:2;i:4579;}i:2;i:4579;}i:197;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:4579;}i:198;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4579;}i:199;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:123:"Rule 3 : When you feel the need to write a comment, first try to refactor the code so that any comment becomes superfluous.";}i:2;i:4602;}i:200;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4725;}i:201;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4727;}i:202;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:13:"7. Principles";i:1;i:2;i:2;i:4727;}i:2;i:4727;}i:203;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:4727;}i:204;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4753;}i:205;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:28:"7.1 Why should You Refactor?";i:1;i:3;i:2;i:4753;}i:2;i:4753;}i:206;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:4753;}i:207;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4753;}i:208;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:158:"The following points give you a broad overview why you should consider refactoring for your own projects. These points highlight the strengths of refactoring.";}i:2;i:4792;}i:209;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4951;}i:210;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"ul";i:2;s:16:" class="extlist"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:4951;}i:211;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:4951;}i:212;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:4951;}i:213;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:1;i:3;s:5:"
  * ";}i:2;i:4951;}i:214;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:"Improving the design of software";}i:2;i:4956;}i:215;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:32:"Improving the design of software";}i:2;i:4956;}i:216;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:4988;}i:217;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:4988;}i:218;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:4988;}i:219;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:4988;}i:220;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:4988;}i:221;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:47:"Refactoring makes software easier to understand";}i:2;i:4993;}i:222;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:47:"Refactoring makes software easier to understand";}i:2;i:4993;}i:223;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:5040;}i:224;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:5040;}i:225;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5040;}i:226;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5040;}i:227;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:5040;}i:228;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:"Refactoring helps you find bugs";}i:2;i:5045;}i:229;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:31:"Refactoring helps you find bugs";}i:2;i:5045;}i:230;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:5076;}i:231;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:5076;}i:232;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5076;}i:233;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5076;}i:234;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:5076;}i:235;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:36:"Refactoring helps you program faster";}i:2;i:5081;}i:236;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:36:"Refactoring helps you program faster";}i:2;i:5081;}i:237;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:5117;}i:238;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:5117;}i:239;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"ul";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:5117;}i:240;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:4;i:3;s:1:"
";}i:2;i:5117;}i:241;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:5119;}i:242;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:10:"7.2 When ?";i:1;i:3;i:2;i:5119;}i:2;i:5119;}i:243;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:5119;}i:244;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"ul";i:2;s:16:" class="extlist"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5139;}i:245;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5139;}i:246;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5139;}i:247;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5139;}i:248;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:112:"Refactor when you add function : Adding features to code you don't fully understand is easier when you refactor.";}i:2;i:5144;}i:249;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:112:"Refactor when you add function : Adding features to code you don't fully understand is easier when you refactor.";}i:2;i:5144;}i:250;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:5256;}i:251;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:5256;}i:252;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5256;}i:253;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5256;}i:254;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:5256;}i:255;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:35:"Refactor when you need to fix a bug";}i:2;i:5261;}i:256;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:35:"Refactor when you need to fix a bug";}i:2;i:5261;}i:257;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:5296;}i:258;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:5296;}i:259;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5296;}i:260;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5296;}i:261;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:5296;}i:262;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:"Refactor as you do a code review";}i:2;i:5301;}i:263;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:32:"Refactor as you do a code review";}i:2;i:5301;}i:264;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:5333;}i:265;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:5333;}i:266;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"ul";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:5333;}i:267;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:4;i:3;s:1:"
";}i:2;i:5333;}i:268;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:5335;}i:269;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:10:"8 Problems";i:1;i:2;i:2;i:5335;}i:2;i:5335;}i:270;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:5335;}i:271;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5335;}i:272;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:105:"There are areas where you should take care that refactoring does not make things worse instead of better.";}i:2;i:5358;}i:273;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5463;}i:274;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"ul";i:2;s:16:" class="extlist"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5463;}i:275;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5463;}i:276;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5463;}i:277;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5463;}i:278;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:338:"Database : Because application using databases are tightly coupled to the data model in the database, refactoring the application alone is not enough. Refactoring databases although is not easy if you have to do it by hand. A possible solution is an intermediate layer which takes care of persistence and can be refactor without problems.";}i:2;i:5468;}i:279;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:338:"Database : Because application using databases are tightly coupled to the data model in the database, refactoring the application alone is not enough. Refactoring databases although is not easy if you have to do it by hand. A possible solution is an intermediate layer which takes care of persistence and can be refactor without problems.";}i:2;i:5468;}i:280;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:5806;}i:281;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:5806;}i:282;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5806;}i:283;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5806;}i:284;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:5806;}i:285;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:440:"Changing interfaces : It is disturbing that refactoring generally changes interfaces. If people rely on frozen interfaces you published, their code won't work anymore after you refactored them. To avoid this, you can arrange it that the old interface calls the new one(but don't copy-paste methods because of the resulting code duplication) and thus the old and new interfaces run in parallel. In Java, mark the old interface as deprecated.";}i:2;i:5811;}i:286;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:440:"Changing interfaces : It is disturbing that refactoring generally changes interfaces. If people rely on frozen interfaces you published, their code won't work anymore after you refactored them. To avoid this, you can arrange it that the old interface calls the new one(but don't copy-paste methods because of the resulting code duplication) and thus the old and new interfaces run in parallel. In Java, mark the old interface as deprecated.";}i:2;i:5811;}i:287;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:6251;}i:288;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:6251;}i:289;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"ul";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:6251;}i:290;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:4;i:3;s:1:"
";}i:2;i:6251;}i:291;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6251;}i:292;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:353:"There are situations when you shouldn't refactor. If for example the existing code base is just a mess, is full of bugs and does not work even rudimentary, you should consider a total rewrite. Another time refactoring should be avoided is when you are close to a deadline. The productivity gain would only appear after the deadline and thus be too late.";}i:2;i:6253;}i:293;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6606;}i:294;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:6608;}i:295;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:13:"11 Conclusion";i:1;i:2;i:2;i:6608;}i:2;i:6608;}i:296;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:6608;}i:297;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:6634;}i:298;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:6634;}}