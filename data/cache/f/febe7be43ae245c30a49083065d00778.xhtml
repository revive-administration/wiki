
<h1 class="sectionedit1" id="망가진_소스코드를_자동으로_진단하기">망가진 소스코드를 자동으로 진단하기</h1>
<div class="level1">

</div>
<!-- EDIT1 SECTION "망가진 소스코드를 자동으로 진단하기" [1-66] -->
<h2 class="sectionedit2" id="고품질_소프트웨어란_무엇인가">고품질 소프트웨어란 무엇인가?</h2>
<div class="level2">

<p>
IEEE의 관점에 따른 개념적인 정의는 고품질 소프트웨어란 주어진 시간과 예산으로 소프트웨어의 목적을 구현한 것이며, 이를 국제 표준 모델인 ISO/IEC9126에서는 다음의 항목을 척도로 소프트웨어의 품질을 평가한다.
</p>

<p>
1. 기능성(functionality) : 기능명세서 같은 요구사항에 대한 만족도를 의미하며, 모든 기능이 개발하기 전에 의도한 대로 오류 없이 정확하게 작동해야 한다. <br/>

</p>

<p>
2. 신뢰성(reliability) : 소프트웨어의 성능이 일정 수준을 유지할 수 있는지를 말하며, 사용자의 잘못된 조작 같은 예외적인 상황에서도 고장 없이 모든 기능이 지속해서 작동해야 한다. <br/>

</p>

<p>
3. 사용성(usability) : 소프트웨어가 얼마나 사용하기 편한가를 말하며, 소프트웨어는 사용자의 사용 편의를 위해 UI와 메시지 등을 일관되게 유지함으로써 사용상의 혼란을 방지해야 한다. 예를 들어, 알림창에 확인과 취소 버튼순으로 정의했다면, 사용자의 혼란을 방지하기 위해 소프트웨어의 모든 팝업 창의 버튼 순서는 확인과 취소순으로 일관되게 제공되어야 한다. <br/>

</p>

<p>
4. 효율성(efficiency) : 소프트웨어의 성능을 의미하며, 소프트웨어는 같은 환경에서 빠른 처리 속도를 보장하고 CPU와 메모리 같은 자원을 최소한으로 사용해야 한다.<br/>

</p>

<p>
5. 유지보수성(maintainability) : 소프트웨어가 배포된 이후 얼마나 안정적으로 운영되는가를 말하며, 소프트웨어의 지속적인 운영을 위한 변경은 되도록 쉬워야 하며, 수정된 이후에도 안정적으로 운영돼야 한다.<br/>

</p>

<p>
6. 이식성(portability) : 소프트웨어가 특정 환경에 종속되지 않고, 한 환경에서 다른 환경으로 이식될 수 있는 능력을 의미하며, 대대적인 수정없이 다른 환경으로 이식 가능해야 한다.
</p>

</div>
<!-- EDIT2 SECTION "고품질 소프트웨어란 무엇인가?" [67-] -->