
<h1 class="sectionedit1" id="chapter09_c언어의_핵심_함수">Chapter09 C언어의 핵심! 함수!</h1>
<div class="level1">

</div>
<!-- EDIT1 SECTION "Chapter09 C언어의 핵심! 함수!" [1-51] -->
<h2 class="sectionedit2" id="함수를_정의하고_선언하기">09-1 함수를 정의하고 선언하기</h2>
<div class="level2">

<p>
함수의 구조
</p>
<pre class="code">int Add (int num1, int num2)
{
  int result = num1 + num2;
  return result;
}</pre>

</div>
<!-- EDIT2 SECTION "09-1 함수를 정의하고 선언하기" [52-212] -->
<h2 class="sectionedit3" id="변수의_존재기간과_접근범위_1지역변수">09-2 변수의 존재기간과 접근범위 1: 지역변수</h2>
<div class="level2">

</div>
<!-- EDIT3 SECTION "09-2 변수의 존재기간과 접근범위 1: 지역변수" [213-284] -->
<h3 class="sectionedit4" id="전역_변수와_동일한_이름의_지역변수가_선언되면">전역 변수와 동일한 이름의 지역변수가 선언되면?</h3>
<div class="level3">

<p>
해당 지역 내에서는 전역 변수가 가리워지고, 지역변수로의 접근이 이루어진다.
</p>

</div>
<!-- EDIT4 SECTION "전역 변수와 동일한 이름의 지역변수가 선언되면?" [285-469] -->
<h3 class="sectionedit5" id="static_변수">static 변수</h3>
<div class="level3">
<ul>
<li class="level1"><div class="li"> 선언된 함수 내에서만 접근이 가능하다.</div>
</li>
<li class="level1"><div class="li"> 딱 1회 초기화되고 프로그램 종료 시까지 메모리 공간에 존재한다. (전역변수의 특징)</div>
</li>
</ul>

</div>
<!-- EDIT5 SECTION "static 변수" [470-670] -->
<h2 class="sectionedit6" id="재귀함수에_대한_이해">09-4 재귀함수에 대한 이해</h2>
<div class="level2">

<p>
함수 내에서 자기 자신을 다시 호출하는 함수
</p>

</div>
<!-- EDIT6 SECTION "09-4 재귀함수에 대한 이해" [671-] -->