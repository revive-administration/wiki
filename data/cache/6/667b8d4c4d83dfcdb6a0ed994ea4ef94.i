a:41:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:26:"07 지시자의 모든 것";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:43;}i:4;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:43:"HTML에서 지시자를 사용하는 방법";i:1;i:2;i:2;i:43;}i:2;i:43;}i:5;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:43;}i:6;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:100;}i:7;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:26:"사용자 정의 지시자";i:1;i:2;i:2;i:100;}i:2;i:100;}i:8;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:100;}i:9;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:138;}i:10;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:23:"지시자 설정 객체";i:1;i:3;i:2;i:138;}i:2;i:138;}i:11;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:138;}i:12;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:138;}i:13;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:151:"지시자 설정 함수에서 반환되는 객체를 지시자 설정 객체라 한다. 이 설정 객체로 AngularJS가 지시자를 만들게 된다";}i:2;i:172;}i:14;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:324;}i:15;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:324;}i:16;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:39:"자체 템플릿을 가지는 지시자";i:1;i:3;i:2;i:324;}i:2;i:324;}i:17;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:324;}i:18;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:324;}i:19;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:214:"앞에서 만든 Hello 지시자를 좀 더 업그레이드해보자. 이번에는 링크 함수에서 DOM을 직접 생성하지 않고 template 설정을 이용해 생성하려는 DOM을 템플릿화해보겠다.";}i:2;i:374;}i:20;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:588;}i:21;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:590;}i:22;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:26:"scope 설정 완전 정복";i:1;i:3;i:2;i:590;}i:2;i:590;}i:23;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:590;}i:24;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:628;}i:25;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:52:"별도의 새로운 scope를 만들지 않는 설정";i:1;i:4;i:2;i:628;}i:2;i:628;}i:26;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:628;}i:27;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:689;}i:28;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:41:"부모 scope를 상속받는 scope 설정";i:1;i:4;i:2;i:689;}i:2;i:689;}i:29;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:689;}i:30;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:689;}i:31;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:123:"지시자 설정 객체에 scope 속성에 true 값을 주면 부모 scope를 상속받는 새로운 scope가 생성된다.";}i:2;i:739;}i:32;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:863;}i:33;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:863;}i:34;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:33:"ngTransclude와 transclude 설정";i:1;i:4;i:2;i:863;}i:2;i:863;}i:35;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:863;}i:36;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:863;}i:37;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:270:"AngularJS에서 지시자를 이용하면 ng-click과 같이 특정 DOM에 이벤트를 연결하거나 ng-repeat처럼 DOM을 조작하는 일을 할 수 있다. 하지만 hello 지시자처럼 재사용할 수 있는 기능이 있는 컴포넌트를 만들 수 있다.";}i:2;i:905;}i:38;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1175;}i:39;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1177;}i:40;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:1177;}}