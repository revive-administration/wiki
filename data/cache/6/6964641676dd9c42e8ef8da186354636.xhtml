
<h1 class="sectionedit1" id="장_http_메시지">3장 HTTP 메시지</h1>
<div class="level1">

</div>
<!-- EDIT1 SECTION "3장 HTTP 메시지" [1-34] -->
<h2 class="sectionedit2" id="메시지의_흐름">3.1 메시지의 흐름</h2>
<div class="level2">

<p>
HTTP 메시지는 HTTP 애플리케이션 간에 주고받은 데이터의 블록들이다. 
</p>

</div>
<!-- EDIT2 SECTION "3.1 메시지의 흐름" [35-163] -->
<h3 class="sectionedit3" id="메시지는_원_서버_방향을_인바운드로_하여_송신된다">3.1.1 메시지는 원 서버 방향을 인바운드로 하여 송신된다</h3>
<div class="level3">

</div>
<!-- EDIT3 SECTION "3.1.1 메시지는 원 서버 방향을 인바운드로 하여 송신된다" [164-249] -->
<h3 class="sectionedit4" id="메시지_문법">3.2.1 메시지 문법</h3>
<div class="level3">

<p>
요청 메시지의 형식은 다음과 같다<br/>

&lt;메서드&gt; &lt;요청URL&gt; &lt;버전&gt; <br/>

&lt;헤더&gt; <br/>

<br/>

&lt;엔터티 본문&gt; <br/>
<br/>

</p>

<p>
응답 메시지의 형식은 다음과 같다. <br/>

&lt;버전&gt; &lt;상태 코드&gt; &lt;사유구절&gt;<br/>

&lt;헤더&gt;<br/>
<br/>

&lt;엔터티 본문&gt;<br/>
<br/>

</p>

</div>

<h4 id="상태코드">상태코드</h4>
<div class="level4">

<p>
요청 중에 무엇이 일어났는지 설명하는 세자리의 숫자다. 
</p>

</div>

<h4 id="사유구절">사유구절</h4>
<div class="level4">

<p>
숫자로 된 상태 코드의 의미를 사람이 이해할 수 있게 설명해주는 짧은 문구이다.
</p>

</div>

<h4 id="엔터티_본문">엔터티 본문</h4>
<div class="level4">

<p>
엔터티 본문은 임의의 데이터 블록을 포함한다. 모든 메시지가 엔터티 본문을 갖는 것은 아니다.
</p>

</div>
<!-- EDIT4 SECTION "3.2.1 메시지 문법" [250-925] -->
<h3 class="sectionedit5" id="시작줄">3.2.2 시작줄</h3>
<div class="level3">

<p>
일곱가지 메서드
</p>
<div class="table sectionedit6"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0"> 메서드 </th><th class="col1"> 설명 </th><th class="col2"> 메시지 본문이 있는가? </th>
	</tr>
	</thead>
	<tr class="row1">
		<td class="col0"> GET </td><td class="col1"> 서버에서 어떤 문서를 가져온다 </td><td class="col2"> X </td>
	</tr>
	<tr class="row2">
		<td class="col0"> HEAD </td><td class="col1"> 서버에서 어떤 문서에 대해 헤더만 가져온다 </td><td class="col2"> X </td>
	</tr>
	<tr class="row3">
		<td class="col0"> POST </td><td class="col1"> 서버가 처리해야 할 데이터를 보낸다. </td><td class="col2"> O </td>
	</tr>
	<tr class="row4">
		<td class="col0"> PUT </td><td class="col1"> 서버에 요청 메시지의 본문을 저장한다 </td><td class="col2"> O </td>
	</tr>
	<tr class="row5">
		<td class="col0"> TRACE </td><td class="col1"> 메시지가 프록시를 거쳐 서버에 도달하는 과정을 추적한다 . </td><td class="col2"> X </td>
	</tr>
	<tr class="row6">
		<td class="col0"> OPTIONS </td><td class="col1"> 서버가 어떤 메서드를 수행할 수 있는지 확인한다. </td><td class="col2"> X </td>
	</tr>
	<tr class="row7">
		<td class="col0"> DELETE </td><td class="col1"> 서버에서 문서를 제거한다. </td><td class="col2"> X </td>
	</tr>
</table></div>
<!-- EDIT6 TABLE [975-1533] -->
</div>
<!-- EDIT5 SECTION "3.2.2 시작줄" [926-1534] -->
<h3 class="sectionedit7" id="post">3.3.5 POST</h3>
<div class="level3">

<p>
POST 메서드는 서버에 입력 데이터를 전송하기 위해 설계되었다. 채워진 폼에 담긴 데이터는 서버로 전송되며, 서버는 이를 모아서 필요로 하는 곳에보낸다.
</p>

</div>
<!-- EDIT7 SECTION "3.3.5 POST" [1535-1763] -->
<h3 class="sectionedit8" id="리다이렉션_상태_코드">3.4.3 300-399: 리다이렉션 상태 코드</h3>
<div class="level3">

<p>
리다이렉션 상태 코드는 클라이언트가 관심있어 하는 리소스에 대해 다른 위치를 사용하라고 말해주거나, 그 리소스의 내용 대신 다른 대안 응답을 제공한다. 
</p>

</div>
<!-- EDIT8 SECTION "3.4.3 300-399: 리다이렉션 상태 코드" [1764-2031] -->
<h3 class="sectionedit9" id="클라이언트_에러_상태_코드">3.4.4 400-499: 클라이언트 에러 상태 코드</h3>
<div class="level3">

<ul  class="extlist">
  <li><div class="li">400 Bad Request : 클라이언트가 잘못된 요청을 보냈다고 말해준다. </div></li>
  <li><div class="li">401 Unauthorized : 리소스를 얻기 전에 클라이언트에게 스스로를 인증하라고 요구하는 내용의 응답을 적절한 헤더와 함꼐 반환한다.</div></li>
  <li><div class="li">402 PaymentRequired</div></li>
  <li><div class="li">403 Forbidden : 요청이 서버에 의해 거부되었음을 알려주기 위해 사용한다. </div></li>
  <li><div class="li">404 Not Found : 서버가 요청한 URL을 찾을 수 없음을 알려주기 위해 사용한다.</div></li>
  <li><div class="li">408 Request Timeout : 클라이언트의 요청을 완수하기에 시간이 너무 많이 걸리는 경우, 서버는 이 상태 코드로 응답하고 연결을 끊을 수 있다. </div></li>
</ul>

</div>
<!-- EDIT9 SECTION "3.4.4 400-499: 클라이언트 에러 상태 코드" [2032-2772] -->
<h3 class="sectionedit10" id="서버_에러_상태_코드">3.4.5 500-599: 서버 에러 상태 코드</h3>
<div class="level3">

<p>
때때로, 클라이언트가 올바른 요청을 보냈음에도 서버 자체에서 에러가 발생하는 경우가 있다. 이것은 클라이언트가 서버의 제한에 걸린 것일 수도 있고 혹은 게이트웨이 리소스와 같은 서버의 보조 구성요소에서 발생한 에러일 수도 있다. 
</p>

<p>
프록시는 클라이언트의 입장에서 서버와 대화를 시도할 때 자주 에러를 만나게 된다. 
</p>

<ul  class="extlist">
  <li><div class="li">500 Internal Server Error : 서버가 요청을 처리할 수 없게 만드는 에러를 만났을 때 사용한다.</div></li>
  <li><div class="li">501 Not Implemented : 클라이언트가 서버의 능력을 넘은 요청을 했을 때 사용한다.</div></li>
  <li><div class="li">502 Bad Gateway : 프록시나 게이트웨이처럼 행동하는 서버가 그 요청 응답 연쇄에 있는 다음 링크로부터 가짜 응답에 맞닥뜨렸을 때 사용한다.</div></li>
  <li><div class="li">503 Service Unavailable : 현재는 서버가 요청을 처리해 줄 수 없지만 나중에는 가능함을 의미하고자 할 때 사용한다. 만약 서버가 언제 그 리소스를 사용할 수 있게 될 지 알고 있다면 서버는 Retry-After 헤더를 응</div></li>
</ul>

</div>
<!-- EDIT10 SECTION "3.4.5 500-599: 서버 에러 상태 코드" [2773-] -->