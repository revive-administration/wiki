
<h1 class="sectionedit1" id="의존관계_주입과_서비스">08 의존관계 주입과 서비스</h1>
<div class="level1">

</div>
<!-- EDIT1 SECTION "08 의존관계 주입과 서비스" [1-50] -->
<h2 class="sectionedit2" id="angularjs에서의_서비스란">AngularJS에서의 서비스란?</h2>
<div class="level2">

</div>
<!-- EDIT2 SECTION "AngularJS에서의 서비스란?" [51-95] -->
<h2 class="sectionedit3" id="angularjs에서의_의존관계_주입">AngularJS에서의 의존관계 주입</h2>
<div class="level2">

<p>
하나의 객체가 다른 객체를 사용하는 순간 의존관계가 성립된다. 그러므로 어느 애플리케이션이든 여러 객체 사이에 의존관계가 필연적으로 성립될 수밖에 없다. AngualrJS 개발자 문서에서는 자바스크립트 상에서 객체들 사이의 의존관계가 크게 세 가지 경우에 생성된다고 한다.
</p>
<ul>
<li class="level1"><div class="li"> 1. new 키워드를 통한 의존관계 성립</div>
</li>
<li class="level1"><div class="li"> 2. 전역변수 참조를 통한 의존관계 성립</div>
</li>
<li class="level1"><div class="li"> 3. 인자를 통하여 참조를 전달받아 의존관계 성립</div>
</li>
</ul>

</div>
<!-- EDIT3 SECTION "AngularJS에서의 의존관계 주입" [96-695] -->
<h3 class="sectionedit4" id="modulefactory를_이용한_hello_서비스_만들기">Module.factory를 이용한 Hello 서비스 만들기</h3>
<div class="level3">

<p>
서비스를 만들려면 모듈 인스턴스가 필요하다. angular.module() 함수를 이용해 모듈을 만들면 모듈 인스턴스를 얻을 수 있다. 이 모듈  인스턴스는 서비스를 만들 수 있는 다양한 메서드를 제공한다.
</p>

</div>
<!-- EDIT4 SECTION "Module.factory를 이용한 Hello 서비스 만들기" [696-1018] -->
<h3 class="sectionedit5" id="provide를_이용한_provider_정의">$provide를 이용한 Provider 정의</h3>
<div class="level3">

<p>
AngularJs에서 $provide를 이용해 주입할 수 있는 서비스를 제공해 주는 프로바이더(Provider)를 정의할 수 있다. 이렇게 정의된 서비스 프로바이더가 특정 서비스를 제공해주는 것이다. 그래서 서비스를 단순하게 생각하면 $provide로 정의한 프로바이더가 생성하는 객체라고 할수 있다. 이런 서비스를 만드는 방법은 다음과 같다.
</p>
<ul>
<li class="level1"><div class="li"> Value로 정의하는 방법</div>
</li>
<li class="level1"><div class="li"> Factory로 정의하는 방법</div>
</li>
<li class="level1"><div class="li"> Service로 정의하는 방법</div>
</li>
<li class="level1"><div class="li"> Provider로 정의하는 방법</div>
</li>
<li class="level1"><div class="li"> Constant로 정의하는 방법</div>
</li>
</ul>

</div>
<!-- EDIT5 SECTION "$provide를 이용한 Provider 정의" [1019-] -->