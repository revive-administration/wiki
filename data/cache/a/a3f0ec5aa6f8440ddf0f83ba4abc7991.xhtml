
<h1 class="sectionedit1" id="chapter_08_커맨드_패턴">Chapter 08 커맨드 패턴</h1>
<div class="level1">

</div>
<!-- EDIT1 SECTION "Chapter 08 커맨드 패턴" [1-42] -->
<h2 class="sectionedit2" id="만능_버튼_만들기">8.1 만능 버튼 만들기</h2>
<div class="level2">
<dl class="file">
<dt><a href="/dokuwiki/doku.php?do=export_code&amp;id=chapter_08_%EC%BB%A4%EB%A7%A8%EB%93%9C_%ED%8C%A8%ED%84%B4&amp;codeblock=0" title="조각 다운로드" class="mediafile mf_">코드 8-1</a></dt>
<dd><pre class="code file java"><span class="kw1">package</span> <span class="co2">Ch08</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">class</span> Lamp <span class="br0">&#123;</span>
	<span class="kw1">public</span> <span class="kw4">void</span> turnOn<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
		<a href="http://www.google.com/search?hl=en&amp;q=allinurl%3Adocs.oracle.com+javase+docs+api+system"><span class="kw3">System</span></a>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span><span class="st0">&quot;Lamp on&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
	<span class="br0">&#125;</span>
<span class="br0">&#125;</span>
&nbsp;
<span class="kw1">class</span> <a href="http://www.google.com/search?hl=en&amp;q=allinurl%3Adocs.oracle.com+javase+docs+api+button"><span class="kw3">Button</span></a> <span class="br0">&#123;</span>
	<span class="kw1">private</span> Lamp theLamp<span class="sy0">;</span>
&nbsp;
	<span class="kw1">public</span> <a href="http://www.google.com/search?hl=en&amp;q=allinurl%3Adocs.oracle.com+javase+docs+api+button"><span class="kw3">Button</span></a><span class="br0">&#40;</span>Lamp theLamp<span class="br0">&#41;</span> <span class="br0">&#123;</span>
		<span class="kw1">this</span>.<span class="me1">theLamp</span> <span class="sy0">=</span> theLamp<span class="sy0">;</span>
	<span class="br0">&#125;</span>
&nbsp;
	<span class="kw1">public</span> <span class="kw4">void</span> pressed<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
		theLamp.<span class="me1">turnOn</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
	<span class="br0">&#125;</span>
<span class="br0">&#125;</span>
&nbsp;
<span class="kw1">public</span> <span class="kw1">class</span> Client <span class="br0">&#123;</span>
	<span class="kw1">public</span> <span class="kw1">static</span> <span class="kw4">void</span> main<span class="br0">&#40;</span><a href="http://www.google.com/search?hl=en&amp;q=allinurl%3Adocs.oracle.com+javase+docs+api+string"><span class="kw3">String</span></a><span class="br0">&#91;</span><span class="br0">&#93;</span> args<span class="br0">&#41;</span> <span class="br0">&#123;</span>
		Lamp lamp <span class="sy0">=</span> <span class="kw1">new</span> Lamp<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
		<a href="http://www.google.com/search?hl=en&amp;q=allinurl%3Adocs.oracle.com+javase+docs+api+button"><span class="kw3">Button</span></a> lampButton <span class="sy0">=</span> <span class="kw1">new</span> <a href="http://www.google.com/search?hl=en&amp;q=allinurl%3Adocs.oracle.com+javase+docs+api+button"><span class="kw3">Button</span></a><span class="br0">&#40;</span>lamp<span class="br0">&#41;</span><span class="sy0">;</span>
		lampButton.<span class="me1">pressed</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
	<span class="br0">&#125;</span>
&nbsp;
<span class="br0">&#125;</span></pre>
</dd></dl>

<p>
Button 클래스의 생성자를 이용해 불을 켤 Lamp 객체를 전달한다. 그리고 Button 클래스의 pressed 메서드가 호출되면 생성자를 통해 전달받은 Lamp 객체의 turnOn 메서드를 호출해 불을 켠다.
</p>

</div>
<!-- EDIT2 SECTION "8.1 만능 버튼 만들기" [43-757] -->
<h2 class="sectionedit3" id="문제점">8.2 문제점</h2>
<div class="level2">
<ul>
<li class="level1"><div class="li"> 누군가 버튼을 눌렀을 때 램프가 켜지는 대신 다른 기능을 실행하게 하려면 어떤 변경 작업을 해야 하는가?</div>
</li>
<li class="level1"><div class="li"> 버튼을 누르는 동작에 따라 다른 기능을 실행하게 하려면 어떤 변경 작업을 해야 하는가?</div>
</li>
</ul>

</div>
<!-- EDIT3 SECTION "8.2 문제점" [758-1053] -->
<h3 class="sectionedit4" id="버튼을_눌렀을_때_다른_기능을_실행하는_경우">8.2.1 버튼을 눌렀을 때 다른 기능을 실행하는 경우</h3>
<div class="level3">
<dl class="file">
<dt><a href="/dokuwiki/doku.php?do=export_code&amp;id=chapter_08_%EC%BB%A4%EB%A7%A8%EB%93%9C_%ED%8C%A8%ED%84%B4&amp;codeblock=1" title="조각 다운로드" class="mediafile mf_">코드 8-2</a></dt>
<dd><pre class="code file java"><span class="kw1">private</span> Alarm theAlarm<span class="sy0">;</span>
<span class="kw1">public</span> <a href="http://www.google.com/search?hl=en&amp;q=allinurl%3Adocs.oracle.com+javase+docs+api+button"><span class="kw3">Button</span></a><span class="br0">&#40;</span>Alarm theAlarm<span class="br0">&#41;</span><span class="br0">&#123;</span>
	<span class="kw1">this</span>.<span class="me1">theAlarm</span> <span class="sy0">=</span> theAlarm<span class="sy0">;</span>
<span class="br0">&#125;</span></pre>
</dd></dl>

</div>
<!-- EDIT4 SECTION "8.2.1 버튼을 눌렀을 때 다른 기능을 실행하는 경우" [1054-1247] -->
<h3 class="sectionedit5" id="버튼을_누르는_동작에_따라_다른_기능을_실행하는_경우">8.2.2 버튼을 누르는 동작에 따라 다른 기능을 실행하는 경우</h3>
<div class="level3">

<p>
switch ~ case를 통한 분리
</p>

</div>
<!-- EDIT5 SECTION "8.2.2 버튼을 누르는 동작에 따라 다른 기능을 실행하는 경우" [1248-1369] -->
<h2 class="sectionedit6" id="해결책">8.3 해결책</h2>
<div class="level2">

<p>
새로운 기능을 추가하거나 변경하더라도 Button 클래스를 그대로 사용하려면 Button 클래스의 pressed 메서드에서 구체적인 기능을 직접 구현하는 대신 버튼을 눌렀을 때 실행될 기능을 Button 클래스 외부에서 제공받아 캡슐화해 pressed 메서드에서 호출하는 방법을 사용할 수가 있다.
</p>
<dl class="file">
<dt><a href="/dokuwiki/doku.php?do=export_code&amp;id=chapter_08_%EC%BB%A4%EB%A7%A8%EB%93%9C_%ED%8C%A8%ED%84%B4&amp;codeblock=2" title="조각 다운로드" class="mediafile mf_">코드 8-4</a></dt>
<dd><pre class="code file java"><span class="kw1">public</span> <span class="kw1">interface</span> Command<span class="br0">&#123;</span>
	<span class="kw1">public</span> <span class="kw1">abstract</span> <span class="kw4">void</span> execute<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="br0">&#125;</span>
&nbsp;
<span class="kw1">public</span> <span class="kw1">class</span> <a href="http://www.google.com/search?hl=en&amp;q=allinurl%3Adocs.oracle.com+javase+docs+api+button"><span class="kw3">Button</span></a><span class="br0">&#123;</span>
	<span class="kw1">private</span> Command theCommand<span class="sy0">;</span>
&nbsp;
	<span class="kw1">public</span> <a href="http://www.google.com/search?hl=en&amp;q=allinurl%3Adocs.oracle.com+javase+docs+api+button"><span class="kw3">Button</span></a><span class="br0">&#40;</span>Command theCommand<span class="br0">&#41;</span><span class="br0">&#123;</span>
		setCommand<span class="br0">&#40;</span>theCommand<span class="br0">&#41;</span><span class="sy0">;</span>
	<span class="br0">&#125;</span>
&nbsp;
	<span class="kw1">public</span> <span class="kw4">void</span> setCommand<span class="br0">&#40;</span>Command newCommand<span class="br0">&#41;</span><span class="br0">&#123;</span>
		<span class="kw1">this</span>.<span class="me1">theCommand</span> <span class="sy0">=</span> newCommand<span class="sy0">;</span>
	<span class="br0">&#125;</span>
&nbsp;
	<span class="kw1">public</span> <span class="kw4">void</span> pressed<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
		theCommand.<span class="me1">execute</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
	<span class="br0">&#125;</span>
<span class="br0">&#125;</span>
&nbsp;
<span class="kw1">public</span> <span class="kw1">class</span> Lamp<span class="br0">&#123;</span>
	<span class="kw1">public</span> <span class="kw4">void</span> turnOn<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
		<a href="http://www.google.com/search?hl=en&amp;q=allinurl%3Adocs.oracle.com+javase+docs+api+system"><span class="kw3">System</span></a>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span><span class="st0">&quot;Lamp On&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
	<span class="br0">&#125;</span>
<span class="br0">&#125;</span>
&nbsp;
<span class="kw1">public</span> <span class="kw1">class</span> LampOnCommand <span class="kw1">implements</span> Command<span class="br0">&#123;</span>
	<span class="kw1">private</span> Lamp theLamp<span class="sy0">;</span>
&nbsp;
	<span class="kw1">public</span> LampOnCommand<span class="br0">&#40;</span>Lamp theLamp<span class="br0">&#41;</span><span class="br0">&#123;</span>
		<span class="kw1">this</span>.<span class="me1">theLamp</span> <span class="sy0">=</span> theLamp<span class="sy0">;</span>
	<span class="br0">&#125;</span>
&nbsp;
	<span class="kw1">public</span> <span class="kw4">void</span> execute<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
		theLamp.<span class="me1">turnOn</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
	<span class="br0">&#125;</span>
<span class="br0">&#125;</span>
&nbsp;
<span class="kw1">public</span> <span class="kw1">class</span> Alarm<span class="br0">&#123;</span>
	<span class="kw1">public</span> <span class="kw4">void</span> Start<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
		<a href="http://www.google.com/search?hl=en&amp;q=allinurl%3Adocs.oracle.com+javase+docs+api+system"><span class="kw3">System</span></a>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span><span class="st0">&quot;Alarming..&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
	<span class="br0">&#125;</span>
<span class="br0">&#125;</span>
&nbsp;
<span class="kw1">public</span> <span class="kw1">class</span> AlarmOnCommand <span class="kw1">implements</span> Command<span class="br0">&#123;</span>
	<span class="kw1">private</span> Alarm theAlarm<span class="sy0">;</span>
&nbsp;
	<span class="kw1">public</span> AlarmOnCommand<span class="br0">&#40;</span>Alarm theAlarm<span class="br0">&#41;</span><span class="br0">&#123;</span>
		<span class="kw1">this</span>.<span class="me1">theAlarm</span> <span class="sy0">=</span> theAlarm<span class="sy0">;</span>
	<span class="br0">&#125;</span>
&nbsp;
	<span class="kw1">public</span> <span class="kw4">void</span> execute<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
		theAlarm.<span class="me1">start</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
	<span class="br0">&#125;</span>
<span class="br0">&#125;</span>
&nbsp;
<span class="kw1">public</span> <span class="kw1">class</span> Client<span class="br0">&#123;</span>
	<span class="kw1">public</span> <span class="kw1">static</span> <span class="kw4">void</span> main<span class="br0">&#40;</span><a href="http://www.google.com/search?hl=en&amp;q=allinurl%3Adocs.oracle.com+javase+docs+api+string"><span class="kw3">String</span></a><span class="br0">&#91;</span><span class="br0">&#93;</span> args<span class="br0">&#41;</span><span class="br0">&#123;</span>
		Lamp lamp <span class="sy0">=</span> <span class="kw1">new</span> Lamp<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
		Command lampOnCommand <span class="sy0">=</span> <span class="kw1">new</span> LampOnCommand<span class="br0">&#40;</span>lamp<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
		<a href="http://www.google.com/search?hl=en&amp;q=allinurl%3Adocs.oracle.com+javase+docs+api+button"><span class="kw3">Button</span></a> button1 <span class="sy0">=</span> <span class="kw1">new</span> <a href="http://www.google.com/search?hl=en&amp;q=allinurl%3Adocs.oracle.com+javase+docs+api+button"><span class="kw3">Button</span></a><span class="br0">&#40;</span>lampOnCommand<span class="br0">&#41;</span><span class="sy0">;</span>
		button1.<span class="me1">pressed</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
		Alarm alarm <span class="sy0">=</span> <span class="kw1">new</span> Alarm<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
		Command alarmOnCommand <span class="sy0">=</span> <span class="kw1">new</span> AlarmOnCommand<span class="br0">&#40;</span>alarm<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
		<a href="http://www.google.com/search?hl=en&amp;q=allinurl%3Adocs.oracle.com+javase+docs+api+button"><span class="kw3">Button</span></a> button2 <span class="sy0">=</span> <span class="kw1">new</span> <a href="http://www.google.com/search?hl=en&amp;q=allinurl%3Adocs.oracle.com+javase+docs+api+button"><span class="kw3">Button</span></a><span class="br0">&#40;</span>alarmOnCommand<span class="br0">&#41;</span><span class="sy0">;</span>
		button2.<span class="me1">pressed</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
		button2.<span class="me1">setCommand</span><span class="br0">&#40;</span>lampOnCommand<span class="br0">&#41;</span><span class="sy0">;</span>
		button2.<span class="me1">pressed</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
	<span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre>
</dd></dl>

<p>
Command 인터페이스를 구현하는 LampOnCommand와 AlarmCommand 객체를 Button 객체에 설정한다. 그리고 Button 클래스의 pressed 메서드에서 Command 인터페이스의 execute 메서드를 호출할 수 있게 함으로써 LampOnCommand와 AlarmCommand 클래스의 execute 메서드를 실행할 수가 있다. 즉, 버튼을 눌렀을 때 필요한 임의의 기능은 Command 인터페이스를 구현한 클래스의 객체를 Button 객체에서 설정해서 실행할 수 있다. 따라서 Button 클래스는 소스 코드를 변경하지 않으면서도 다양한 동작을 구현할 수 있게 된다.
</p>

<p>
이와 같은 설계를 이용하면 버튼을 눌렀을 때 램프를 끄는 기능도 기존의 Button 클래스를 변경하지 않고 구현할 수 있다. 
</p>

</div>
<!-- EDIT6 SECTION "8.3 해결책" [1370-3896] -->
<h2 class="sectionedit7" id="커맨드_패턴">8.4 커맨드 패턴</h2>
<div class="level2">

<p>
커맨드 패턴은 이벤트가 발생했을 때 실행될 기능이 다양하면서도 변경이 필요한 경우에 이벤트를 발생시키는 클래스를 변경하지 않고 재사용하고자 할 때 유용하다. 
</p>

<p>
예를 들어 &#039;FileOpen&#039;이라는 메뉴 항목을 선택되었을 때 실행될 기능과 &#039;FileClose&#039;라는 메뉴 항목이 선택되었을 때 실행되는 기능은 다를 것이다. 이런 경우 MenuItem 클래스에서 직접 구체적인 기능을 구현한다면 &#039;FileOpen&#039; 메뉴 항목을 위한 MenuItem 클래스와 &#039;FileClose&#039;메뉴 학목을 위한 MenuItem 클래스를 각각 구현해야 한다. MenuItem 클래스는 하나이므로 &#039;FileOpen&#039;과 &#039;FileClose&#039; 메뉴 항목을 재사용하기 어려울 수 있기 때문이다.
</p>

<p>
이런 경우에는 커맨드 패턴을 활용하면 MenuItem 클래스를 재사용할 수 있다. 먼저 &#039;FileOpen&#039;메뉴의 기능과 &#039;FileClose&#039;메뉴의 기능을 담당하는 클래스가 Command라는 인터페이스를 구현하도록 한다. 그리고 MenuItem 클래스가 Command 인터페이스를 사용하도록 설계하면 MenuItem 클래스는 &#039;FileOpen&#039; 메뉴 항목과 &#039;FileClose&#039; 메뉴 항목에서 그대로 재사용할 수 있게 된다.
</p>

<p>
<strong>Keypoint_ </strong> 커맨드 패턴은 실행될 기능을 캡슐화함으로써 기능의 실행을 요구하는 호출자(Invoker) 클래스와 실제 기능을 실행하는 수신자(Receiver)클래스 사이의 의존성을 제거한다. 따라서 실행될 기능의 변경에도 호출자 클래스를 수정 없이 그대로 사용할 수 있도록 해준다.
</p>

</div>
<!-- EDIT7 SECTION "8.4 커맨드 패턴" [3897-] -->