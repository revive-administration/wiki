a:262:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:46:"Chapter 15 표현 언어 (Expression Language)";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:63;}i:4;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:20:"01 표현 언어란?";i:1;i:2;i:2;i:63;}i:2;i:63;}i:5;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:63;}i:6;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:63;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:260:"표현 언어(Expression Language)는 JSTL(JSP Standard Tag Library) 1.0 규약에 소개된 내용으로서 JSP 2.0 버전부터 표현 언어가 포함되었고, JSP 2.1 버전부터 표현 언어와 관련된 규약을 별도 문서로 제공하고 있다. ";}i:2;i:96;}i:8;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:356;}i:9;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:356;}i:10;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:242:"표현 언어는 이름에서 알 수 있듯이 값을 표현하는데 사용되는 새로운 스크립트 언어로서 JSP의 기본 문법을 보오나하는 역할을 한다. 표현 언어는 다음과 같은 기능을 제공하고 있다.";}i:2;i:358;}i:11;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:600;}i:12;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"ul";i:2;s:16:" class="extlist"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:600;}i:13;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:600;}i:14;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:600;}i:15;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:1;i:3;s:5:"
  * ";}i:2;i:600;}i:16;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:71:"JSP의 네 가지 기본 객체가 제공하는 영역의 속성 사용";}i:2;i:605;}i:17;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:71:"JSP의 네 가지 기본 객체가 제공하는 영역의 속성 사용";}i:2;i:605;}i:18;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:676;}i:19;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:676;}i:20;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:676;}i:21;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:676;}i:22;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:676;}i:23;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:44:"집합 객체에 대한 접근 방법 제공";}i:2;i:681;}i:24;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:44:"집합 객체에 대한 접근 방법 제공";}i:2;i:681;}i:25;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:725;}i:26;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:725;}i:27;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:725;}i:28;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:725;}i:29;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:725;}i:30;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:53:"수치 연산, 관계 연산, 논리 연산자 제공";}i:2;i:730;}i:31;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:53:"수치 연산, 관계 연산, 논리 연산자 제공";}i:2;i:730;}i:32;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:783;}i:33;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:783;}i:34;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:783;}i:35;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:783;}i:36;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:783;}i:37;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:47:"자바 클래스 메서드 호출 기능 제공";}i:2;i:788;}i:38;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:47:"자바 클래스 메서드 호출 기능 제공";}i:2;i:788;}i:39;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:835;}i:40;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:835;}i:41;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:835;}i:42;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:835;}i:43;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:835;}i:44;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:40:"표현 언어만의 기본 객체 제공";}i:2;i:840;}i:45;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:40:"표현 언어만의 기본 객체 제공";}i:2;i:840;}i:46;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:880;}i:47;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:880;}i:48;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"ul";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:880;}i:49;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:4;i:3;s:1:"
";}i:2;i:880;}i:50;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:882;}i:51;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:34:"1.1 표현 언어의 기본 문법";i:1;i:3;i:2;i:882;}i:2;i:882;}i:52;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:882;}i:53;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:882;}i:54;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:116:"표현 언어는 다음과 같이 $와 표현식 그리고 괄호 ('{' 와 '}')를 사용하여 값을 표현한다.";}i:2;i:927;}i:55;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1043;}i:56;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:8:"${expr}
";}i:2;i:1043;}i:57;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1043;}i:58;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:274:"expr 부분에는 표현 언어가 정의한 문법에 따라 값을 표현하는 식이 온다. 표현 언어는 액션 태그나 18장에서 배울 커스텀 태그의 속성 값으로 사용할 수 있다. 예를 들어, 다음과 같은 형태로 사용이 가능하다.";}i:2;i:1057;}i:59;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1332;}i:60;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:64:"<jsp:include page="/module/${skin.id}/header.jsp" flush="true"/>";}i:2;i:1332;}i:61;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1332;}i:62;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:153:"액션 태그나 커스텀 태그뿐만 아니라 비스크립트 요소 부분에서도 표현식처럼 값을 출력하기 위해 사용할 수 있다.";}i:2;i:1401;}i:63;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1555;}i:64;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:53:"<b>${sessionScope.member.id}</b>님 환영합니다.
";}i:2;i:1555;}i:65;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1555;}i:66;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:228:"표현 언어는 JSP의 스크립트 요소(스크립틀릿, 표현식, 선언부)를 제외한 나머지 부분에서 사용될 수 있으며, 표현 언어를 통해서 표현식보다 편리하게 값을 출력할 수 있다.";}i:2;i:1614;}i:67;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1842;}i:68;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1842;}i:69;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:338:"JSP 2.1 버전부터는 ${expr} 형식뿐만 아니라 #{expr}구문ㅇ르 새롭게 지원하고 있다. #{expr}형식은 JSF(JavaServer Faces)에서 사용되던 표현 언어 구문으로 JSP 2.1 버전에 새롭게 추가되었다. #{expr}과 ${expr}의 가장 큰 차이점은 실제로 EL의 값을 언제 생성하느냐에 있다.";}i:2;i:1844;}i:70;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2182;}i:71;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2182;}i:72;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:126:"${expr} 형식의 EL은 ${expr} 구문을 분석할 때 곧바로 값을 계산한다. 예를 들어, 아래 코드를 보자.";}i:2;i:2184;}i:73;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2311;}i:74;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:54:"<%
	Member m = new Member();
	m.setName("이름1");
%>";}i:2;i:2311;}i:75;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:181:"<c:set var="m" value="<%=m%>">
<c:set var="name" value="${m.name}" /><%-- 이 시점에 바로 값 계산 --%>
<% m.setName("이름2"); %>
${name} <%-- name의 값은 "이름1" --%>";}i:2;i:2371;}i:76;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2371;}i:77;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:242:"아직 배우진 않았지만 <c:set> JSTL 태그는 EL 변수를 생성해주는 기능을 제공한다. 위 코드에서 name EL 변수의 값으로 ${m.name}을 지정했는데, m.name을 계산한 결과인(즉, m.getName()의 결과인) ";}i:2;i:2559;}i:78;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:2801;}i:79;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"이름1";}i:2;i:2802;}i:80;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2809;}i:81;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:147:"을 name의 값으로 할당한다. 따라서, 그 뒤에 m.setName()으로 값을 변경하더라도 name 변수의 값을 변경되지 않는다.";}i:2;i:2810;}i:82;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2957;}i:83;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2957;}i:84;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:89:"반면에 #{expr} 형식의 구문은 실제로 값이 사용될 때 값을 계산한다.";}i:2;i:2959;}i:85;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3048;}i:86;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3050;}i:87;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:33:"02 표현 언어의 기본 객체";i:1;i:2;i:2;i:3050;}i:2;i:3050;}i:88;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:3050;}i:89;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3050;}i:90;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:466:"JSP는 웹 어플리케이션을 구현하는데 필요한 정보를 담고 있는 요청, 응답, 세션 등에 쉽게 접근할 수 있도록 request, session 등의 기본 객체를 제공하고 있다. EL(표현 언어)도 이와 마찬가지로 11개의 기본 객체를 제공함으로써 요청 파라미터나 세션 속성 값 등을 표현식에서 쉽게 사용할 수 있도록 하고 있다. EL이 제공하는 11개의 기본객체는 다음과 같다.";}i:2;i:3096;}i:91;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3563;}i:92;a:3:{i:0;s:10:"table_open";i:1;a:3:{i:0;i:2;i:1;i:12;i:2;i:3564;}i:2;i:3563;}i:93;a:3:{i:0;s:15:"tablethead_open";i:1;a:0:{}i:2;i:3563;}i:94;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:3563;}i:95;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3563;}i:96;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"기본 객체";}i:2;i:3565;}i:97;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:3578;}i:98;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3578;}i:99;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"설명";}i:2;i:3579;}i:100;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:3585;}i:101;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:3586;}i:102;a:3:{i:0;s:16:"tablethead_close";i:1;a:0:{}i:2;i:3586;}i:103;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:3586;}i:104;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3586;}i:105;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"pageContext";}i:2;i:3588;}i:106;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3599;}i:107;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3599;}i:108;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:43:" JSP의 page 기본 객체와 동일하다.";}i:2;i:3600;}i:109;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3643;}i:110;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:3644;}i:111;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:3644;}i:112;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3644;}i:113;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"pageScope";}i:2;i:3646;}i:114;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3655;}i:115;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3655;}i:116;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:93:" pageContext 기본 객체에 저장된 속성의 <속성,값> 매핑을 저장한 Map 객체";}i:2;i:3656;}i:117;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3749;}i:118;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:3750;}i:119;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:3750;}i:120;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3750;}i:121;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"requestScope ";}i:2;i:3752;}i:122;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3765;}i:123;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3765;}i:124;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:89:" request 기본 객체에 저장된 속성의 <속성,값> 매핑을 저장한 Map 객체";}i:2;i:3766;}i:125;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3855;}i:126;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:3856;}i:127;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:3856;}i:128;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3856;}i:129;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"sessionScope ";}i:2;i:3858;}i:130;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3871;}i:131;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3871;}i:132;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:89:" session 기본 객체에 저장된 속성의 <속성,값> 매핑을 저장한 Map 객체";}i:2;i:3872;}i:133;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3961;}i:134;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:3962;}i:135;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:3962;}i:136;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3962;}i:137;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"applicationScope";}i:2;i:3964;}i:138;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3980;}i:139;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3980;}i:140;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:92:"application 기본 객체에 저장된 속성의 <속성,값> 매핑을 저장한 Map 객체";}i:2;i:3981;}i:141;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4073;}i:142;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:4074;}i:143;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:4074;}i:144;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4074;}i:145;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"param ";}i:2;i:4076;}i:146;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4082;}i:147;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4082;}i:148;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:183:" 요청 파라미터의 <파라미터이름, 값> 매핑을 저장한 Map 객체, 파라미터 값을 타입은 String으로서, request.getParameter(이름)의 결과와 동일하다";}i:2;i:4083;}i:149;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4266;}i:150;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:4267;}i:151;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:4267;}i:152;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4267;}i:153;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"paramValues";}i:2;i:4269;}i:154;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4280;}i:155;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4280;}i:156;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:112:"요청 파라미터의 <파라미터이름, 값배열> 매핑을 저장한 Map 객체. 값의 타입은 String[]";}i:2;i:4281;}i:157;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4393;}i:158;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:4394;}i:159;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:4394;}i:160;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4394;}i:161;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"header";}i:2;i:4396;}i:162;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4402;}i:163;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4402;}i:164;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:121:"요청 정보의 <헤더이름, 값> 매핑을 저장한 Map 객체. request.getHeader(이름)의 결과와 동일하다.";}i:2;i:4403;}i:165;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4524;}i:166;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:4525;}i:167;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:4525;}i:168;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4525;}i:169;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"headerValues";}i:2;i:4527;}i:170;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4539;}i:171;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4539;}i:172;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:130:" 요청 정보의 <헤더이름, 값 배열> 매핑을 저장한 Map 객체. request.getHeaders(이름)의 결과와 동일하다.";}i:2;i:4540;}i:173;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4670;}i:174;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:4671;}i:175;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:4671;}i:176;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4671;}i:177;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"cookie";}i:2;i:4673;}i:178;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4679;}i:179;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4679;}i:180;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:133:"<쿠키 이름, Cookie> 매핑을 저장한 Map 객체. request.getCookies()로 구한 Cookie 배열로부터 매핑을 생성한다.";}i:2;i:4680;}i:181;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4813;}i:182;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:4814;}i:183;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:4814;}i:184;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4814;}i:185;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"initParam";}i:2;i:4816;}i:186;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4825;}i:187;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4825;}i:188;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:135:" 초기화 파라미터의<이름, 값> 매핑을 저장한 Map 객체, application.getInitParameter(이름)의 결과와 동일하다.";}i:2;i:4826;}i:189;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4961;}i:190;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:4962;}i:191;a:3:{i:0;s:11:"table_close";i:1;a:1:{i:0;i:4962;}i:2;i:4962;}i:192;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4964;}i:193;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:26:"03 표현 언어의 기본";i:1;i:2;i:2;i:4964;}i:2;i:4964;}i:194;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:4964;}i:195;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4964;}i:196;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:325:"EL도 일종의 스크립트 언어로서 자료 타입, 수치 연산자, 논리 연산자, 비교 연산자 등을 제공하고 있다. EL의 언어적인 측면과 규칙들을 숙지하지 않으면, 나중에 EL을 사용할 때 버그나 논리적인 오류들을 쉽게 찾을 수 없게 되므로 익히도록 하자.";}i:2;i:5003;}i:197;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5329;}i:198;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:5329;}i:199;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:26:"3.1 EL의 데이터 타입";i:1;i:3;i:2;i:5329;}i:2;i:5329;}i:200;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:5329;}i:201;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5329;}i:202;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:181:"EL은 불리언 타입, 정수 타입, 실수 타입, 문자열 타입, 그리고 널 타입의 5가지 타입을 제공하고 있으며 각각의 표현 방식은 다음과 같다.";}i:2;i:5367;}i:203;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5548;}i:204;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"ul";i:2;s:16:" class="extlist"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5548;}i:205;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5548;}i:206;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5548;}i:207;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5548;}i:208;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"불리언 타입";}i:2;i:5553;}i:209;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:16:"불리언 타입";}i:2;i:5553;}i:210;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:5569;}i:211;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:5569;}i:212;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5569;}i:213;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5569;}i:214;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:5569;}i:215;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"정수 타입";}i:2;i:5574;}i:216;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:13:"정수 타입";}i:2;i:5574;}i:217;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:5587;}i:218;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:5587;}i:219;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5587;}i:220;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5587;}i:221;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:5587;}i:222;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"실수 타입";}i:2;i:5592;}i:223;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:13:"실수 타입";}i:2;i:5592;}i:224;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:5605;}i:225;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:5605;}i:226;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5605;}i:227;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5605;}i:228;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:5605;}i:229;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"문자열 타입";}i:2;i:5610;}i:230;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:16:"문자열 타입";}i:2;i:5610;}i:231;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:5626;}i:232;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:5626;}i:233;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5626;}i:234;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:5626;}i:235;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:5626;}i:236;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"널 타입";}i:2;i:5631;}i:237;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:10:"널 타입";}i:2;i:5631;}i:238;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:5641;}i:239;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:5641;}i:240;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"ul";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:5641;}i:241;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:4;i:3;s:1:"
";}i:2;i:5641;}i:242;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:5642;}i:243;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:26:"3.2 객체에 접근하기";i:1;i:3;i:2;i:5642;}i:2;i:5642;}i:244;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:5642;}i:245;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:5679;}i:246;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:20:"3.3 객체의 탐색";i:1;i:3;i:2;i:5679;}i:2;i:5679;}i:247;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:5679;}i:248;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:5711;}i:249;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:20:"3.4 수치 연산자";i:1;i:3;i:2;i:5711;}i:2;i:5711;}i:250;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:5711;}i:251;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:5742;}i:252;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:20:"3.5 비교 연산자";i:1;i:3;i:2;i:5742;}i:2;i:5742;}i:253;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:5742;}i:254;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:5773;}i:255;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:49:"04 표현 언어에서 객체의 메서드 호출";i:1;i:2;i:2;i:5773;}i:2;i:5773;}i:256;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:5773;}i:257;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:5835;}i:258;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:62:"05 표현 언어에서 클래스 정적 메서드 호출하기";i:1;i:2;i:2;i:5835;}i:2;i:5835;}i:259;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:5835;}i:260;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:5910;}i:261;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:5910;}}