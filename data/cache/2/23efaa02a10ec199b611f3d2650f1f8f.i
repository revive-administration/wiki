a:68:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:21:"1장 네티 맛보기";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:37;}i:4;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:18:"1.3 Discard 서버";i:1;i:2;i:2;i:37;}i:2;i:37;}i:5;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:37;}i:6;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:68;}i:7;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:17:"1.4 에코 서버";i:1;i:2;i:2;i:68;}i:2;i:68;}i:8;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:68;}i:9;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:68;}i:10;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:90:"에코서버는 클라이언트로부터 입력받은 데이터를 그대로 돌려준다.";}i:2;i:98;}i:11;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:188;}i:12;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:190;}i:13;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:28:"1.4.2 클라이언트 구현";i:1;i:3;i:2;i:190;}i:2;i:190;}i:14;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:190;}i:15;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:190;}i:16;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:317:"에코 클라이언트 데이터 핸드럴와 에코 서버 데이터 핸드러의 구조를 비교해보자. 두 데이터 핸들러 모두 ChannelInboundHandlerAdapter를 상속하며 구혆ㅆ는데, 클라이언트 데이터 핸들러에 channelActive 이벤트를 추가했다. 주요 설명은 다음과 같다.";}i:2;i:229;}i:17;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:546;}i:18;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"ul";i:2;s:16:" class="extlist"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:546;}i:19;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:546;}i:20;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:546;}i:21;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:1;i:3;s:5:"
  * ";}i:2;i:546;}i:22;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:140:"1) channelActive 이벤트는 ChannelboundHandler에 정의된 이벤트로써 소켓 채널이 최초 활성화 되었을 때 실행된다.";}i:2;i:551;}i:23;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:140:"1) channelActive 이벤트는 ChannelboundHandler에 정의된 이벤트로써 소켓 채널이 최초 활성화 되었을 때 실행된다.";}i:2;i:551;}i:24;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:691;}i:25;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:691;}i:26;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:691;}i:27;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:691;}i:28;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:691;}i:29;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:278:"2) writeAndFlush 메서드는 내부적으로 데이터 기록과 전송의 두 가지 메서드를 호출한다. 첫 번재는 채널에 데이터를 기록하는 write 메서드이며 두 번째는 채널에 기록된 데이터를 서버로 전송하는 flush 메서드이다.";}i:2;i:696;}i:30;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:278:"2) writeAndFlush 메서드는 내부적으로 데이터 기록과 전송의 두 가지 메서드를 호출한다. 첫 번재는 채널에 데이터를 기록하는 write 메서드이며 두 번째는 채널에 기록된 데이터를 서버로 전송하는 flush 메서드이다.";}i:2;i:696;}i:31;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:974;}i:32;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:974;}i:33;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:974;}i:34;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:974;}i:35;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:974;}i:36;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:114:"3) channelRead(..) : 서버로부터 수신된 데이터가 있을 때 호출되는 네티 이벤트 메서드다.";}i:2;i:979;}i:37;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:114:"3) channelRead(..) : 서버로부터 수신된 데이터가 있을 때 호출되는 네티 이벤트 메서드다.";}i:2;i:979;}i:38;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:1093;}i:39;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:1093;}i:40;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:1093;}i:41;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:1093;}i:42;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:1093;}i:43;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:119:"4) readMessage : 서버로부터 수신된 데이터가 저장된 msg 객체에서 문자열 데이터를 추출한다.";}i:2;i:1098;}i:44;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:119:"4) readMessage : 서버로부터 수신된 데이터가 저장된 msg 객체에서 문자열 데이터를 추출한다.";}i:2;i:1098;}i:45;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:1217;}i:46;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:1217;}i:47;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:1217;}i:48;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:1217;}i:49;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:1217;}i:50;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:109:"5) channelReadComplete(..) : 수신된 데이터를 모두 읽었을 때 호출되는 이벤트 메서드다.";}i:2;i:1222;}i:51;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:109:"5) channelReadComplete(..) : 수신된 데이터를 모두 읽었을 때 호출되는 이벤트 메서드다.";}i:2;i:1222;}i:52;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:1331;}i:53;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:1331;}i:54;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:1331;}i:55;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:1331;}i:56;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:1331;}i:57;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:98:"6) ctx.close() : 수신된 데이터를 모두 읽은 후 서버와 연결된 채널을 닫는다.";}i:2;i:1336;}i:58;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:98:"6) ctx.close() : 수신된 데이터를 모두 읽은 후 서버와 연결된 채널을 닫는다.";}i:2;i:1336;}i:59;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:1434;}i:60;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:1434;}i:61;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"ul";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:1434;}i:62;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:4;i:3;s:1:"
";}i:2;i:1434;}i:63;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1436;}i:64;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:35:"1.4.3 데이터 이동의 방향성";i:1;i:3;i:2;i:1436;}i:2;i:1436;}i:65;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1436;}i:66;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1482;}i:67;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:1482;}}