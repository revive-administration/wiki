a:253:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"14장 해싱";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:28;}i:4;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:31:"14.1 해싱이란 무엇인가?";i:1;i:2;i:2;i:28;}i:2;i:28;}i:5;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:28;}i:6;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:28;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:192:"해싱(Hashing)은 정보를 최대한 빨리 저장하고 꺼내오는 기법이다. 최적의 검색을 수행하는 데 사용하고 심볼 테이블을 구현하는데 좋은 기법이다.";}i:2;i:72;}i:8;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:264;}i:9;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:266;}i:10;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:29:"14.2 왜 해싱을 하는가?";i:1;i:2;i:2;i:266;}i:2;i:266;}i:11;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:266;}i:12;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:266;}i:13;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:62:"시간복잡도 O(n)으로 단축하기 위해서, 평균 O(1)";}i:2;i:308;}i:14;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:371;}i:15;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:371;}i:16;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:25:"14.3 해시 테이블 ADT";i:1;i:2;i:2;i:371;}i:2;i:371;}i:17;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:371;}i:18;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:409;}i:19;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:27:"14.4 해싱을 이해하기";i:1;i:2;i:2;i:409;}i:2;i:409;}i:20;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:409;}i:21;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:409;}i:22;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:332:"숫자의 경우 가능한 키의 집합이 무한하다(혹은 매우 크다). 거대한 배열을 만들어 카운터를 저장하는 것은 불가능하다. 결국 가능한 키들을 사용할 수 있는 장소 중 하나에 매핑해야한다. 다수의 키를 적절한 장소에 매핑하는 과정을 해싱이라고 한다.";}i:2;i:449;}i:23;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:781;}i:24;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:783;}i:25;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:28:"14.5 해싱의 구성 요소";i:1;i:2;i:2;i:783;}i:2;i:783;}i:26;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:783;}i:27;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:783;}i:28;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:62:"해싱과 관련된 4개의 주요 구성 요소들이 있다.";}i:2;i:824;}i:29;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:886;}i:30;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"ul";i:2;s:16:" class="extlist"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:886;}i:31;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:886;}i:32;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:886;}i:33;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:1;i:3;s:5:"
  * ";}i:2;i:886;}i:34;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:"1) 해시 테이블";}i:2;i:891;}i:35;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:19:"1) 해시 테이블";}i:2;i:891;}i:36;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:910;}i:37;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:910;}i:38;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:910;}i:39;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:910;}i:40;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:910;}i:41;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"2) 해시 함수";}i:2;i:915;}i:42;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:16:"2) 해시 함수";}i:2;i:915;}i:43;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:931;}i:44;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:931;}i:45;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:931;}i:46;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:931;}i:47;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:931;}i:48;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:"3) 충돌(Collision)";}i:2;i:936;}i:49;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:20:"3) 충돌(Collision)";}i:2;i:936;}i:50;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:956;}i:51;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:956;}i:52;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:956;}i:53;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:956;}i:54;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:956;}i:55;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:23:"4) 충돌 해결 기법";}i:2;i:961;}i:56;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:23:"4) 충돌 해결 기법";}i:2;i:961;}i:57;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:984;}i:58;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:984;}i:59;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"ul";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:984;}i:60;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:4;i:3;s:1:"
";}i:2;i:984;}i:61;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:986;}i:62;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:21:"14.6 해시 테이블";i:1;i:2;i:2;i:986;}i:2;i:986;}i:63;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:986;}i:64;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:986;}i:65;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:649:"해시 테이블은 배열의 일반화된 형태이다. 배열에서 우리는 키가 k인 항목을 배열의 k위치에 저장한다. 즉 주어진 키 k에 대해 키가 k인 항목을배열의 k번째 위치를 통해 찾는다는 것이다. 이를 Direct Addressing이라고 한다. 반면 해시 테이블 또는 해시 맵(map)은 키와 그에 연관된 값을 저장하는 데이터 구조이다. 해시 테이블은 해시 함수를 사용하여 키를 연관된 값에 할당한다. 일반저긍로 실제 저장되는 키의 개수가 가능한 키의 모든 개수에 비해 상대적으로 적을 때 해시 테이블을 사용한다.";}i:2;i:1020;}i:66;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1669;}i:67;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1671;}i:68;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:18:"14.7 해시 함수";i:1;i:2;i:2;i:1671;}i:2;i:1671;}i:69;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:1671;}i:70;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1671;}i:71;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:209:"해시 함수는 키를 인덱스로 변환할 때 사용된다. 이상적으로 해시 함수가 각 가능한 키를 고유한 슬롯 인덱스로 할당해야 하지만 실제로는 달성하기 어렵다. ";}i:2;i:1702;}i:72;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1911;}i:73;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1911;}i:74;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1913;}i:75;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:47:"해시 함수를 어떻게 선택할 것인가?";}i:2;i:1915;}i:76;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1962;}i:77;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:1964;}i:78;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:84:"
해시 테이블의 생성과 관련된 기본적인 문제들은 다음과 같다.";}i:2;i:1966;}i:79;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2050;}i:80;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"ul";i:2;s:16:" class="extlist"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:2050;}i:81;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:2050;}i:82;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:2050;}i:83;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:1;i:3;s:5:"
  * ";}i:2;i:2050;}i:84;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:126:"삽입된 객체들을 테이블에 균일하게 분배할 수 있도록 효율적인 해시 함수가 설계되어야 한다.";}i:2;i:2055;}i:85;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:126:"삽입된 객체들을 테이블에 균일하게 분배할 수 있도록 효율적인 해시 함수가 설계되어야 한다.";}i:2;i:2055;}i:86;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:2181;}i:87;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:2181;}i:88;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:2181;}i:89;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:2181;}i:90;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:2181;}i:91;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:209:"해시 인덱스가 해시 테이블에 이미 다른 객체가 삽입된 위치를 가리킬 때 또 다른 인덱스를 계산할 수 있는 효율적인 충돌 해결 알고리즘이 설계되어야 한다.";}i:2;i:2186;}i:92;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:209:"해시 인덱스가 해시 테이블에 이미 다른 객체가 삽입된 위치를 가리킬 때 또 다른 인덱스를 계산할 수 있는 효율적인 충돌 해결 알고리즘이 설계되어야 한다.";}i:2;i:2186;}i:93;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:2395;}i:94;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:2395;}i:95;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:2395;}i:96;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:2395;}i:97;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:2395;}i:98;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:158:"계산이 빨리 이루어지고, 테이블 안의 위치 범위 내의 값을 리턴하며 충돌을 최소화하는 해시 함수를 선택해야만 한다.";}i:2;i:2400;}i:99;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:158:"계산이 빨리 이루어지고, 테이블 안의 위치 범위 내의 값을 리턴하며 충돌을 최소화하는 해시 함수를 선택해야만 한다.";}i:2;i:2400;}i:100;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:2558;}i:101;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:2558;}i:102;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"ul";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:2558;}i:103;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:4;i:3;s:1:"
";}i:2;i:2558;}i:104;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2558;}i:105;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:2560;}i:106;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:" 좋은 해시 함수의 특성";}i:2;i:2562;}i:107;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:2593;}i:108;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:2595;}i:109;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:66:"
좋은 해시 함수는 다음과 같은 특성을 갖고 있다.";}i:2;i:2597;}i:110;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2664;}i:111;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"ul";i:2;s:16:" class="extlist"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:2664;}i:112;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:2664;}i:113;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:2664;}i:114;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:1;i:3;s:5:"
  * ";}i:2;i:2664;}i:115;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"충돌 최소화";}i:2;i:2669;}i:116;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:16:"충돌 최소화";}i:2;i:2669;}i:117;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:2685;}i:118;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:2685;}i:119;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:2685;}i:120;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:2685;}i:121;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:2685;}i:122;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:"쉽고 빠른 계산";}i:2;i:2690;}i:123;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:20:"쉽고 빠른 계산";}i:2;i:2690;}i:124;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:2710;}i:125;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:2710;}i:126;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:2710;}i:127;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:2710;}i:128;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:2710;}i:129;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:50:"해시 테이블 안에 키를 균등하게 분배";}i:2;i:2715;}i:130;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:50:"해시 테이블 안에 키를 균등하게 분배";}i:2;i:2715;}i:131;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:2765;}i:132;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:2765;}i:133;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:2765;}i:134;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:2765;}i:135;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:2765;}i:136;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:46:"키에서 제공하는 모든 정보를 사용";}i:2;i:2770;}i:137;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:46:"키에서 제공하는 모든 정보를 사용";}i:2;i:2770;}i:138;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:2816;}i:139;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:2816;}i:140;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:2816;}i:141;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:2816;}i:142;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:2816;}i:143;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:81:"주어진 키 집합에 대해 높은 적재율(Load Factor)를 가져야 한다.";}i:2;i:2821;}i:144;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:81:"주어진 키 집합에 대해 높은 적재율(Load Factor)를 가져야 한다.";}i:2;i:2821;}i:145;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:2902;}i:146;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:2902;}i:147;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"ul";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:2902;}i:148;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:4;i:3;s:1:"
";}i:2;i:2902;}i:149;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2904;}i:150;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:14:"14.8 적재율";i:1;i:2;i:2;i:2904;}i:2;i:2904;}i:151;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:2904;}i:152;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2904;}i:153;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:443:"빈 해시 테이블이 아닌 해시 테이블에서의 적재율은 테이블에 저장된 항목의 개수를 테이블의 크기로 나눈 것이다. 적재율은 리해시(rehash)를 해야 할지 기존의 해시 테이블을 확장해야 할지 결정할 때 고려된다. 또한 해시 함수의 효율성을 계산할 때도 사용된다. 즉 해시 함수가 키들을 균등하게 분배하는지 여부를 알 수 있게 해준다.";}i:2;i:2930;}i:154;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3374;}i:155;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:76:"적재윤 = 해시 테이블 안의 항목 개수 / 해시 테이블 크기
";}i:2;i:3374;}i:156;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3456;}i:157;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:11:"14.9 충돌";i:1;i:2;i:2;i:3456;}i:2;i:3456;}i:158;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:3456;}i:159;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3456;}i:160;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:84:"충돌은 두 개의 항목이 같은 장소에 저장되어 버리는 상황이다.";}i:2;i:3479;}i:161;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3563;}i:162;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3565;}i:163;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:29:"14.10 충돌 해결 기법들";i:1;i:2;i:2;i:3565;}i:2;i:3565;}i:164;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:3565;}i:165;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3565;}i:166;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:378:"대체 자소를 찾는 과정을 충돌 해결(Collision Resolution)이라고 한다. 해시 테이블에 충돌 문제가 있다고 하더라도 많은 경우에 검색 트리와 같은 다른 데이터 구조보다 훨씬 효율적이다. 많은 충돌 해결 기법이 있는데 가장 많이 쓰이는 것은 개방 번지화(Open Addressing)와 체인법(Chaining)이다. ";}i:2;i:3607;}i:167;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3986;}i:168;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"ul";i:2;s:16:" class="extlist"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:3986;}i:169;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:3986;}i:170;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:3986;}i:171;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:1;i:3;s:5:"
  * ";}i:2;i:3986;}i:172;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:65:"직접 체인법(Direct Chaining) : 연결 리스트들의 배열";}i:2;i:3991;}i:173;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:65:"직접 체인법(Direct Chaining) : 연결 리스트들의 배열";}i:2;i:3991;}i:174;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"ul";i:2;s:16:" class="extlist"";}i:2;i:1;i:3;s:7:"
    * ";}i:2;i:4056;}i:175;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:7:"
    * ";}i:2;i:4056;}i:176;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:7:"
    * ";}i:2;i:4056;}i:177;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:7:"
    * ";}i:2;i:4056;}i:178;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:35:"분리 체인법(Separate Chaining)";}i:2;i:4063;}i:179;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:35:"분리 체인법(Separate Chaining)";}i:2;i:4063;}i:180;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:4098;}i:181;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:4098;}i:182;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"ul";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:4098;}i:183;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:4098;}i:184;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:4098;}i:185;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:4098;}i:186;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:4098;}i:187;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:45:"개방 번지화 : 배열에 기반한 구현";}i:2;i:4103;}i:188;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:45:"개방 번지화 : 배열에 기반한 구현";}i:2;i:4103;}i:189;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"ul";i:2;s:16:" class="extlist"";}i:2;i:1;i:3;s:7:"
    * ";}i:2;i:4148;}i:190;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:7:"
    * ";}i:2;i:4148;}i:191;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:7:"
    * ";}i:2;i:4148;}i:192;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:7:"
    * ";}i:2;i:4148;}i:193;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:45:"선형 탐사(Linear Probing) : 선형 검색";}i:2;i:4155;}i:194;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:45:"선형 탐사(Linear Probing) : 선형 검색";}i:2;i:4155;}i:195;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:7:"
    * ";}i:2;i:4200;}i:196;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:7:"
    * ";}i:2;i:4200;}i:197;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:7:"
    * ";}i:2;i:4200;}i:198;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:7:"
    * ";}i:2;i:4200;}i:199;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:7:"
    * ";}i:2;i:4200;}i:200;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:49:"2차 탐사(Quadratic Probing) : 비선형 검색";}i:2;i:4207;}i:201;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:49:"2차 탐사(Quadratic Probing) : 비선형 검색";}i:2;i:4207;}i:202;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:7:"
    * ";}i:2;i:4256;}i:203;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:7:"
    * ";}i:2;i:4256;}i:204;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:7:"
    * ";}i:2;i:4256;}i:205;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:7:"
    * ";}i:2;i:4256;}i:206;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:7:"
    * ";}i:2;i:4256;}i:207;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:63:"이중 해싱(Double Hahsing) : 두 개의 해시 함수 사용";}i:2;i:4263;}i:208;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:63:"이중 해싱(Double Hahsing) : 두 개의 해시 함수 사용";}i:2;i:4263;}i:209;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:4326;}i:210;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:4326;}i:211;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"ul";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:4326;}i:212;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:4326;}i:213;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"ul";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:4326;}i:214;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:4;i:3;s:1:"
";}i:2;i:4326;}i:215;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4328;}i:216;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:22:"14.11 분리 체인법";i:1;i:2;i:2;i:4328;}i:2;i:4328;}i:217;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:4328;}i:218;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4328;}i:219;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:236:"체인법에 의한 충돌 해결은 연결 리스트 표현과 해시 테이블의 결합이다. 두 개 이상의 항목이 같은 장소로 해시되면 이 항목들은 체인이라고 부르는 단일 연결 리스트를 만든다.";}i:2;i:4363;}i:220;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4599;}i:221;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4601;}i:222;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:22:"14.12 개방 번지화";i:1;i:2;i:2;i:4601;}i:2;i:4601;}i:223;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:4601;}i:224;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4601;}i:225;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:225:"개방 번지화에서 모든 키는 해시 테이블 자체에 저장되는데, 개방 번지화는 닫힌 해싱이라고도 불린다. 이 기법은 탐사(Probing)에 기반하고, 충돌은 탐사에 의해 해결된다.";}i:2;i:4636;}i:226;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4861;}i:227;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4863;}i:228;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:13:"선형 탐사";i:1;i:3;i:2;i:4863;}i:2;i:4863;}i:229;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:4863;}i:230;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4863;}i:231;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:360:"각 탐사의 간격은 1로 고정된다. 선형 탐사(Linear Probing)은 해시 테이블을 원래의 해시 위치로부터 시작해서 순차적으로 검색한다. 어떤 위치가 정유되어 있으면 다음 위치를 검사한다. 필요하다면 테이블의 마지막 위치에서 첫 위치로 이동한다. 리해싱 함수는 다음과 같다.";}i:2;i:4885;}i:232;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5245;}i:233;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5245;}i:234;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:33:"rehash(key) = (n + 1) % tablesize";}i:2;i:5247;}i:235;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5280;}i:236;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5280;}i:237;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:578:"선형 탐사의 문제 중 하나는 테이블 항목들이 해시 테이블 안에서 뭉치는 경향이 있다는 것이다. 즉 테이블엔 연속적으로 점유된 위치 그룹이 있고 이를 클러스터링(Clustering)이라고 한다. 클러스터들은 서로 가까워질 수 있고 더 큰 클러스터로 병합될 수 있다. 그러므로 다른 부분엔 상대적으로 적은 항목들이 있어도 테이블의 한 부분은 매우 밀집될 수 있다. 클러스터링은 탐색 검사를 길게 만들기 때문에 전체적인 효율을 감소시킨다.";}i:2;i:5282;}i:238;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5860;}i:239;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5860;}i:240;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:328:"탐사도리 다음 위치는 스텝의 크기로 결정되는데 (1이 아닌) 다른 크기의 스텝도 가능하다. 스텝의 크기는 테이블의 크기에 상대적으로 소수적(prime)이어야 한다. 즉 최대공약수가 1이어야 한다. 결국 클러스터링은 큰 스텝 크기로는 해결할 수 없다. ";}i:2;i:5862;}i:241;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6190;}i:242;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:6192;}i:243;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:11:"2차 탐사";i:1;i:3;i:2;i:6192;}i:2;i:6192;}i:244;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:6192;}i:245;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6192;}i:246;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:368:"탐사의 간격은 해시 값에 비례해서 증가한다(그러므로 간격은 선형적으로 증가하고 인덱스들은 2차 함수로 표현된다). 2차 탐사 기법을 사용하면 클러스터링 문제가 사라진다. 2차 탐사에서는 원래의 해시 위치 i에서 시작한다. 어떤 위치가 점유되어 있으면, i+1^2, i+2^2, i+3^2, i+4^2 ";}i:2;i:6214;}i:247;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:6582;}i:248;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:143:" 위치를 검사한다. 필요하다면 테이블의 마지막 위치에서 첫 위치로 이동한다. 리해싱 함수는 다음과 같다. ";}i:2;i:6585;}i:249;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6728;}i:250;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:33:"
rehash(key) = (n+k^2)%tablesize
";}i:2;i:6728;}i:251;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:6769;}i:252;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:6769;}}