a:106:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:38:"Chapter 01 MVC : Model-View-Controller";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:54;}i:4;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:24:"1.1 MVC의 일반적 예";i:1;i:2;i:2;i:54;}i:2;i:54;}i:5;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:54;}i:6;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"ul";i:2;s:16:" class="extlist"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:90;}i:7;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:90;}i:8;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:90;}i:9;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:1;i:3;s:5:"
  * ";}i:2;i:90;}i:10;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:"윈도우즈 탐색기";}i:2;i:95;}i:11;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:22:"윈도우즈 탐색기";}i:2;i:95;}i:12;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:117;}i:13;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:117;}i:14;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:117;}i:15;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:117;}i:16;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:117;}i:17;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:"Internet Explorer";}i:2;i:122;}i:18;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:17:"Internet Explorer";}i:2;i:122;}i:19;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:139;}i:20;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:139;}i:21;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"ul";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:139;}i:22;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:4;i:3;s:1:"
";}i:2;i:139;}i:23;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:140;}i:24;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"1.2 MVC란 ?";i:1;i:2;i:2;i:140;}i:2;i:140;}i:25;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:140;}i:26;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:140;}i:27;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:"MVC = Model + View + Controller";}i:2;i:165;}i:28;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:196;}i:29;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:196;}i:30;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:716:"기본적으로 객체지향 언어를 이용한 프로그램 설계에서는 필요한 기능을 열거하고 열거된 기능들을 별도의 클래스들로 나누어 작성하게 되는데, 이때 클래스의 기능을 모델의 역할(Role)을 하는 클래스와 뷰의 역할을 하는 클래스, 그리고 컨트롤러의 역할을 하는 클래스로 나누는 것이 가장 기본이며, 핵심이라 할 수 있습니다. 이렇게 각각의 역할을 맡게 된 클래스는 독립적으로 작동하는 것이 아니라 서로 연관 관계를 맺으면서 프로그램의 목적된 바를 수행하게 되는데, 이 때 서로의 연관 관계를 최소화시키는 것이 최대의 관건입니다. ";}i:2;i:198;}i:31;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:914;}i:32;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:914;}i:33;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:628:"하나의 클래스에 다른 두 개 이상의 역할(Role 또는 Responsibility)이 존재한다면, 예를 들어 뷰의 역할을 하는 클래스에 컨트롤러의 기능이 포함되어 있거나 하는 경우, 이는 클래스 설계에 커다란 문제를 내포하고 있음을 의미합니다. 왜냐하면, 눈으로 보이는 부분을 수정하기 위해 Controller의 기능을 수정해야 하기 때문입니다. 이는 하나의 클래스를 수정하는 것이 다른 클래스를 재사용 할 수 없도록 만듭니다. 그래서 클래스 간의 연결 관계를 최소화하는 것이 바람직합니다.";}i:2;i:916;}i:34;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1544;}i:35;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1544;}i:36;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:484:"따라서 클래스는 Model, View, Controller의 역할 중 하나만을 담당하여야 하며, 클래스는 자신을 외부에 노출 시킬 수 있는 추상 계층(Abstract Layer)을 선언하게 됩니다. 여기서 추상 계층이란 클래스에 대한 명세를 선언한 것으로서 실제 구현은 되어 있지 않음을 말합니다. 객체 지향 세계에서의 구현은 추상 계층에서 선언된 명세를 준수해야 하는 강제성을 갖고 있으므로 ";}i:2;i:1546;}i:37;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:2030;}i:38;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:30:"추상 계층은 구현된다.";}i:2;i:2031;}i:39;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2061;}i:40;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:40:"라는 명제는 항상 성립합니다.";}i:2;i:2062;}i:41;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2102;}i:42;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2102;}i:43;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:401:"클래스는 추상 계층을 통해 자신을 노출하고 클래스를 필요로 하는 곳 또한 추상 계층을 통해 참조하게 되므로, 추상 계층의 실제 구현부가 변경, 수정된다 하더라도 이 변경 내용이 서로에게 영향을 주는 사건은 발생하지 않습니다. 즉 추상 계층을 통해 서로의 관계가 연약(Loose Coupling)해지게 만듭니다.";}i:2;i:2104;}i:44;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2505;}i:45;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2505;}i:46;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:"예) libGdx의 Screen ";}i:2;i:2507;}i:47;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"<-";}i:2;i:2529;}i:48;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:59:" 상속해서 사용하므로 서로의 관계가 느슨함";}i:2;i:2531;}i:49;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2590;}i:50;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2590;}i:51;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:291:"Model, View, Controller 이들이 추상 계층을 통해 하나의 유기체와 같이 원활히 작동하면서 동시에 서로의 영향력이 최소화된다면 여기서 사용된 각각의 클래스는 서로에게 독립적이므로 재사용이 가능한 형태가 되게 됩니다.";}i:2;i:2592;}i:52;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2883;}i:53;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2885;}i:54;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:20:"1.3 웹에서의 MVC";i:1;i:2;i:2;i:2885;}i:2;i:2885;}i:55;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:2885;}i:56;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2918;}i:57;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:11:"1.3.1 Model";i:1;i:3;i:2;i:2918;}i:2;i:2918;}i:58;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:2918;}i:59;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2918;}i:60;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:136:"자바에서 모델이라 함은 보통 빈(Bean)을 의미하고 자바에서의 빈은 다음과 같이 3가지로 나누어집니다.";}i:2;i:2938;}i:61;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3074;}i:62;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"ul";i:2;s:16:" class="extlist"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:3074;}i:63;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:3074;}i:64;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:3074;}i:65;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:1;i:3;s:5:"
  * ";}i:2;i:3074;}i:66;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"Java Bean : ";}i:2;i:3079;}i:67;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:12:"Java Bean : ";}i:2;i:3079;}i:68;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"GUI";}i:2;i:3091;}i:69;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:" Component";}i:2;i:3094;}i:70;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:10:" Component";}i:2;i:3094;}i:71;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:3104;}i:72;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:3104;}i:73;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:3104;}i:74;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:3104;}i:75;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:3104;}i:76;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:48:"JSP Bean : 이 장에서 우리가 사용할 것";}i:2;i:3109;}i:77;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:48:"JSP Bean : 이 장에서 우리가 사용할 것";}i:2;i:3109;}i:78;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:3157;}i:79;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:5:"
  * ";}i:2;i:3157;}i:80;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:2:"li";i:2;s:0:"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:3157;}i:81;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:1;i:1;s:3:"div";i:2;s:10:"class="li"";}i:2;i:1;i:3;s:5:"
  * ";}i:2;i:3157;}i:82;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:2;i:3;s:5:"
  * ";}i:2;i:3157;}i:83;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:81:"Enterprise Java Bean : 분산환경에서 사용하는 자바 컴포넌트 기술";}i:2;i:3162;}i:84;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:3;i:3;s:81:"Enterprise Java Bean : 분산환경에서 사용하는 자바 컴포넌트 기술";}i:2;i:3162;}i:85;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:3:"div";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:3243;}i:86;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"li";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:3243;}i:87;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;a:3:{i:0;i:4;i:1;s:2:"ul";i:2;s:0:"";}i:2;i:4;i:3;s:1:"
";}i:2;i:3243;}i:88;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"extlist";i:1;b:1;i:2;i:4;i:3;s:1:"
";}i:2;i:3243;}i:89;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3243;}i:90;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:488:"여기서 우리가 만들어 볼 JSP Bean은 실질적인 비즈니스 로직을 담는 클래스로, Model에 해당하며 이 클래스에 비즈니스 프로세스를 처리할 수 있는 역할만을 부여하고 View라 할 수 있는 Presentation 영역과 컨트롤러의 역할을 내포시키지 않았다면 이 클래스는 꼭 웹에서만 사용될 수 있는 것이 아니라 일반 애플리케이션 또는 다른 시스템에서도 사용할 수 있게 될 것입니다.";}i:2;i:3245;}i:91;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3733;}i:92;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3735;}i:93;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:16:"1.3.2 Controller";i:1;i:3;i:2;i:3735;}i:2;i:3735;}i:94;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:3735;}i:95;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3735;}i:96;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:536:"웹에서의 서블릿은 컨트롤러 역할을 담당합니다. 서블릿은 기본적으로 쓰레드단위로 구동되기 때문에 프로세스 단위로 구동되는 단점을 극복할 수 있었습니다만, Controller과 View가 공존하는 형태가 문제를 낳았습니다. 이러한 문제를 극복하기 위해 출시된 것이 JSP이며, JSP의 출현으로 인해 서블릿 클래스는 컨트롤러의 역할만을 수행할 수 있게 되었고, 프레젠테이션 기능은 JSP에게 위임되게 되었습니다.";}i:2;i:3761;}i:97;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4297;}i:98;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4299;}i:99;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:10:"1.3.3 View";i:1;i:3;i:2;i:4299;}i:2;i:4299;}i:100;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:4299;}i:101;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4299;}i:102;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:75:"JSP의 등장으로 MVC패턴의 완벽한 구현이 가능해졌습니다.";}i:2;i:4319;}i:103;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4394;}i:104;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4397;}i:105;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:4397;}}