a:2:{s:7:"current";a:10:{s:4:"date";a:2:{s:7:"created";i:1502782232;s:8:"modified";i:1503024683;}s:7:"creator";s:6:"벨몽";s:4:"user";s:7:"velmont";s:11:"last_change";a:8:{s:4:"date";i:1503024683;s:2:"ip";s:14:"219.255.207.97";s:4:"type";s:1:"C";s:2:"id";s:21:"1장_네티_맛보기";s:4:"user";s:7:"velmont";s:3:"sum";s:94:"↷ 문서 이름이 1부_네티_소개에서 1장_네티_맛보기(으)로 바뀌었습니다";s:5:"extra";s:0:"";s:10:"sizechange";i:1481;}s:11:"contributor";a:1:{s:7:"velmont";N;}s:11:"plugin_move";a:0:{}s:5:"title";s:21:"1장 네티 맛보기";s:11:"description";a:2:{s:15:"tableofcontents";a:5:{i:0;a:4:{s:3:"hid";s:20:"장_네티_맛보기";s:5:"title";s:21:"1장 네티 맛보기";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:1;a:4:{s:3:"hid";s:14:"discard_서버";s:5:"title";s:18:"1.3 Discard 서버";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:2;a:4:{s:3:"hid";s:13:"에코_서버";s:5:"title";s:17:"1.4 에코 서버";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:3;a:4:{s:3:"hid";s:22:"클라이언트_구현";s:5:"title";s:28:"1.4.2 클라이언트 구현";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:4;a:4:{s:3:"hid";s:29:"데이터_이동의_방향성";s:5:"title";s:35:"1.4.3 데이터 이동의 방향성";s:4:"type";s:2:"ul";s:5:"level";i:3;}}s:8:"abstract";s:504:"1장 네티 맛보기

1.3 Discard 서버

1.4 에코 서버

에코서버는 클라이언트로부터 입력받은 데이터를 그대로 돌려준다.

1.4.2 클라이언트 구현

에코 클라이언트 데이터 핸드럴와 에코 서버 데이터 핸드러의 구조를 비교해보자. 두 데이터 핸들러 모두 ChannelInboundHandlerAdapter를 상속하며 구혆ㅆ는데, 클라이언트 데이터 핸들러에 channelActive 이벤트를 추가했다. 주요 설명은 다음과 같다.…";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:6:{s:4:"date";a:2:{s:7:"created";i:1502782232;s:8:"modified";i:1503024683;}s:7:"creator";s:6:"벨몽";s:4:"user";s:7:"velmont";s:11:"last_change";a:8:{s:4:"date";i:1503024683;s:2:"ip";s:14:"219.255.207.97";s:4:"type";s:1:"C";s:2:"id";s:21:"1장_네티_맛보기";s:4:"user";s:7:"velmont";s:3:"sum";s:94:"↷ 문서 이름이 1부_네티_소개에서 1장_네티_맛보기(으)로 바뀌었습니다";s:5:"extra";s:0:"";s:10:"sizechange";i:1481;}s:11:"contributor";a:1:{s:7:"velmont";N;}s:11:"plugin_move";a:0:{}}}