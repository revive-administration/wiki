a:2:{s:7:"current";a:8:{s:4:"date";a:2:{s:7:"created";i:1434254461;s:8:"modified";i:1434254461;}s:7:"creator";s:6:"벨몽";s:4:"user";s:7:"velmont";s:11:"last_change";a:7:{s:4:"date";i:1434254461;s:2:"ip";s:13:"114.53.82.227";s:4:"type";s:1:"C";s:2:"id";s:39:"greedy_algorithm_vs_dynamic_programming";s:4:"user";s:7:"velmont";s:3:"sum";s:6:"만듦";s:5:"extra";s:0:"";}s:5:"title";s:39:"Greedy Algorithm vs Dynamic Programming";s:11:"description";a:2:{s:15:"tableofcontents";a:4:{i:0;a:4:{s:3:"hid";s:39:"greedy_algorithm_vs_dynamic_programming";s:5:"title";s:39:"Greedy Algorithm vs Dynamic Programming";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:1;a:4:{s:3:"hid";s:6:"비교";s:5:"title";s:6:"비교";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:2;a:4:{s:3:"hid";s:6:"예시";s:5:"title";s:6:"예시";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:3;a:4:{s:3:"hid";s:16:"backtrack_in_dfs";s:5:"title";s:16:"Backtrack in DFS";s:4:"type";s:2:"ul";s:5:"level";i:2;}}s:8:"abstract";s:255:"Greedy Algorithm vs Dynamic Programming

비교
Greedy Algorithmmore efficientdifficult proof그리디는 순서와 랭킹이 중요하다.Dynamic ProgrammingOptimal performance (powerful)Easy proof
예시
0/1 Knapsack Problem : Find A<=S
Backtrack in DFS";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:4:{s:4:"date";a:1:{s:7:"created";i:1434254461;}s:7:"creator";s:6:"벨몽";s:4:"user";s:7:"velmont";s:11:"last_change";a:7:{s:4:"date";i:1434254461;s:2:"ip";s:13:"114.53.82.227";s:4:"type";s:1:"C";s:2:"id";s:39:"greedy_algorithm_vs_dynamic_programming";s:4:"user";s:7:"velmont";s:3:"sum";s:6:"만듦";s:5:"extra";s:0:"";}}}