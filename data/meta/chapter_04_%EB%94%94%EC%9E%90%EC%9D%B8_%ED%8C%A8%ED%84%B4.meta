a:2:{s:7:"current";a:9:{s:4:"date";a:2:{s:7:"created";i:1406686551;s:8:"modified";i:1407151788;}s:7:"creator";s:6:"벨몽";s:4:"user";s:7:"velmont";s:11:"last_change";a:7:{s:4:"date";i:1407151788;s:2:"ip";s:15:"165.194.118.100";s:4:"type";s:1:"E";s:2:"id";s:27:"chapter_04_디자인_패턴";s:4:"user";s:7:"velmont";s:3:"sum";s:0:"";s:5:"extra";s:0:"";}s:11:"contributor";a:1:{s:7:"velmont";s:6:"벨몽";}s:5:"title";s:27:"Chapter 04 디자인 패턴";s:11:"description";a:2:{s:15:"tableofcontents";a:7:{i:0;a:4:{s:3:"hid";s:27:"chapter_04_디자인_패턴";s:5:"title";s:27:"Chapter 04 디자인 패턴";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:1;a:4:{s:3:"hid";s:26:"디자인_패턴의_이해";s:5:"title";s:30:"4.1 디자인 패턴의 이해";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:2;a:4:{s:3:"hid";s:20:"gof_디자인_패턴";s:5:"title";s:24:"4.2 GoF 디자인 패턴";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:3;a:4:{s:3:"hid";s:23:"uml과_디자인_패턴";s:5:"title";s:27:"4.3 UML과 디자인 패턴";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:4;a:4:{s:3:"hid";s:18:"콜라보레이션";s:5:"title";s:24:"4.3.1 콜라보레이션";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:5;a:4:{s:3:"hid";s:22:"순차_다이어그램";s:5:"title";s:28:"4.3.2 순차 다이어그램";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:6;a:4:{s:3:"hid";s:61:"순차_다이어그램과_클래스_다이어그램의_관계";s:5:"title";s:67:"4.3.3 순차 다이어그램과 클래스 다이어그램의 관계";s:4:"type";s:2:"ul";s:5:"level";i:3;}}s:8:"abstract";s:277:"Chapter 04 디자인 패턴

4.1 디자인 패턴의 이해

디자인 패턴이란 소프트웨어를 설계할 때 특정 맥락에서 자주 발생하는 고질적인 문제들이 또 발생했을 때 재사용할 수 있는 훌륭한 해결책이라고 이해하면 된다.";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:5:{s:4:"date";a:2:{s:7:"created";i:1406686551;s:8:"modified";i:1407151788;}s:7:"creator";s:6:"벨몽";s:4:"user";s:7:"velmont";s:11:"last_change";a:7:{s:4:"date";i:1407151788;s:2:"ip";s:15:"165.194.118.100";s:4:"type";s:1:"E";s:2:"id";s:27:"chapter_04_디자인_패턴";s:4:"user";s:7:"velmont";s:3:"sum";s:0:"";s:5:"extra";s:0:"";}s:11:"contributor";a:1:{s:7:"velmont";s:6:"벨몽";}}}