a:2:{s:7:"current";a:9:{s:4:"date";a:2:{s:7:"created";i:1409636364;s:8:"modified";i:1411731409;}s:7:"creator";s:6:"벨몽";s:4:"user";s:7:"velmont";s:11:"last_change";a:7:{s:4:"date";i:1411731409;s:2:"ip";s:14:"165.194.48.230";s:4:"type";s:1:"E";s:2:"id";s:77:"chapter_13_웹_어플리케이션의_일반적인_구성_및_방명록_구현";s:4:"user";s:7:"velmont";s:3:"sum";s:0:"";s:5:"extra";s:0:"";}s:11:"contributor";a:1:{s:7:"velmont";s:6:"벨몽";}s:5:"title";s:77:"Chapter 13 웹 어플리케이션의 일반적인 구성 및 방명록 구현";s:11:"description";a:2:{s:15:"tableofcontents";a:31:{i:0;a:4:{s:3:"hid";s:77:"chapter_13_웹_어플리케이션의_일반적인_구성_및_방명록_구현";s:5:"title";s:77:"Chapter 13 웹 어플리케이션의 일반적인 구성 및 방명록 구현";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:1;a:4:{s:3:"hid";s:52:"웹_어플리케이션의_전형적인_구성_요소";s:5:"title";s:55:"01 웹 어플리케이션의 전형적인 구성 요소";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:2;a:4:{s:3:"hid";s:46:"웹_어플리케이션의_주요_구성_요소";s:5:"title";s:50:"1.1 웹 어플리케이션의 주요 구성 요소";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:3;a:4:{s:3:"hid";s:53:"데이터_접근_객체_data_access_object_의_구현";s:5:"title";s:57:"1.2 데이터 접근 객체(Data Access Object)의 구현";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:4;a:4:{s:3:"hid";s:43:"dao에서_connection에_접근하는_방식";s:5:"title";s:47:"(1) DAO에서 Connection에 접근하는 방식";s:4:"type";s:2:"ul";s:5:"level";i:4;}i:5;a:4:{s:3:"hid";s:61:"간단한_close_및_rollback_처리_코드를_위한_jdbcutil";s:5:"title";s:69:"(2) 간단한 close() 및 rollback() 처리 코드를 위한 JdbcUtil";s:4:"type";s:2:"ul";s:5:"level";i:4;}i:6;a:4:{s:3:"hid";s:38:"dao_객체를_제공하는_daoprovider";s:5:"title";s:42:"1.3 DAO 객체를 제공하는 DaoProvider";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:7;a:4:{s:3:"hid";s:29:"서비스_클래스의_구현";s:5:"title";s:33:"1.4 서비스 클래스의 구현";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:8;a:4:{s:3:"hid";s:42:"서비스_클래스와_트랜잭션_처리";s:5:"title";s:46:"(1) 서비스 클래스와 트랜잭션 처리";s:4:"type";s:2:"ul";s:5:"level";i:4;}i:9;a:4:{s:3:"hid";s:39:"서비스_클래스의_익셉션_처리";s:5:"title";s:43:"(2) 서비스 클래스의 익셉션 처리";s:4:"type";s:2:"ul";s:5:"level";i:4;}i:10;a:4:{s:3:"hid";s:50:"싱글턴_패턴을_이용한_구성_요소_구현";s:5:"title";s:54:"1.4 싱글턴 패턴을 이용한 구성 요소 구현";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:11;a:4:{s:3:"hid";s:48:"connection을_제공해주는_connectionprovider";s:5:"title";s:52:"1.6 Connection을 제공해주는 ConnectionProvider";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:12;a:4:{s:3:"hid";s:16:"방명록_구현";s:5:"title";s:19:"02 방명록 구현";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:13;a:4:{s:3:"hid";s:45:"방명록을_구성하는_클래스의_구조";s:5:"title";s:49:"2.1 방명록을 구성하는 클래스의 구조";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:14;a:4:{s:3:"hid";s:48:"guestbook_message_테이블과_message_클래스";s:5:"title";s:52:"2.2 GUESTBOOK_MESSAGE 테이블과 Message 클래스";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:15;a:4:{s:3:"hid";s:30:"messagedao_클래스의_구현";s:5:"title";s:34:"2.3 MessageDao 클래스의 구현";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:16;a:4:{s:3:"hid";s:25:"mysql에서의_dao_구현";s:5:"title";s:29:"2.4 MySQL에서의 DAO 구현";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:17;a:4:{s:3:"hid";s:22:"mysqlmessagedao_구현";s:5:"title";s:25:"(2)MySQLMessageDao 구현";s:4:"type";s:2:"ul";s:5:"level";i:4;}i:18;a:4:{s:3:"hid";s:24:"mysql_dbcp_설정_파일";s:5:"title";s:27:"(3)MySQL DBCP 설정 파일";s:4:"type";s:2:"ul";s:5:"level";i:4;}i:19;a:4:{s:3:"hid";s:51:"messagedaoprovider와_messagedaoproviderinit_구현";s:5:"title";s:55:"2.5 MessageDaoProvider와 MessageDaoProviderInit 구현";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:20;a:4:{s:3:"hid";s:21:"dbms별_webxml_파일";s:5:"title";s:26:"2.6 DBMS별 web.xml 파일";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:21;a:4:{s:3:"hid";s:30:"서비스_클래스의_구현1";s:5:"title";s:33:"2.7 서비스 클래스의 구현";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:22;a:4:{s:3:"hid";s:41:"getmessagelistservice_클래스의_구현";s:5:"title";s:45:"(1) GetMessageListService 클래스의 구현";s:4:"type";s:2:"ul";s:5:"level";i:4;}i:23;a:4:{s:3:"hid";s:39:"writemessageservice_클래스의_구현";s:5:"title";s:43:"(2) WriteMessageService 클래스의 구현";s:4:"type";s:2:"ul";s:5:"level";i:4;}i:24;a:4:{s:3:"hid";s:40:"deletemessageservice_클래스의_구현";s:5:"title";s:44:"(3) DeleteMessageService 클래스의 구현";s:4:"type";s:2:"ul";s:5:"level";i:4;}i:25;a:4:{s:3:"hid";s:36:"클래스의_컴파일_정리_순서";s:5:"title";s:40:"2.8 클래스의 컴파일 정리 순서";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:26;a:4:{s:3:"hid";s:32:"jsp에서_서비스_사용하기";s:5:"title";s:36:"2.9 JSP에서 서비스 사용하기";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:27;a:4:{s:3:"hid";s:40:"메시지_목록을_보여주는_listjsp";s:5:"title";s:45:"(1) 메시지 목록을 보여주는 list.jsp";s:4:"type";s:2:"ul";s:5:"level";i:4;}i:28;a:4:{s:3:"hid";s:41:"메시지_등록을_처리하는_writejsp";s:5:"title";s:46:"(2) 메시지 등록을 처리하는 write.jsp";s:4:"type";s:2:"ul";s:5:"level";i:4;}i:29;a:4:{s:3:"hid";s:55:"메시지_삭제_폼을_제공하는_confirmdeletionjsp";s:5:"title";s:60:"(3) 메시지 삭제 폼을 제공하는 confirmDeletion.jsp";s:4:"type";s:2:"ul";s:5:"level";i:4;}i:30;a:4:{s:3:"hid";s:56:"메시지_삭제_요청을_처리하는_deletemessagejsp";s:5:"title";s:61:"(4) 메시지 삭제 요청을 처리하는 deleteMessage.jsp";s:4:"type";s:2:"ul";s:5:"level";i:4;}}s:8:"abstract";s:900:"Chapter 13 웹 어플리케이션의 일반적인 구성 및 방명록 구현

01 웹 어플리케이션의 전형적인 구성 요소

유사한 코드가 여러 파일에 중복해서 포함되어 있으면 향후 소프트웨어를 유지 보수하는데 더 많은 비용(즉, 개발 시간)이 발생하게 되고 심한 경우 일부 코드의 수정을 누락해서 심각한 문제가 발생할 수도 있다. 이런 문제를 완화시키기 위한 가장 좋은 방법은 중복된 코드를 별도의 클래스로 모으고 기능이 필요할 때마다 그 클래스를 사용하도록 하는 것이다. 예를 들어 중복된 DB 쿼리 실행 코드를 별도의 클래스에서 구현하고 해당 기능을 필요로 하는 각 JSP들은 클래스를 사용하는 방식으로 개발을 진행함으로써 동일한 코드가 여러 코드에 중복되지 않도록 할 수 있다.…";}s:8:"relation";a:2:{s:5:"media";a:1:{s:32:"kakaotalk_20140902_142748988.jpg";b:1;}s:10:"firstimage";s:32:"kakaotalk_20140902_142748988.jpg";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}}s:10:"persistent";a:5:{s:4:"date";a:2:{s:7:"created";i:1409636364;s:8:"modified";i:1411731409;}s:7:"creator";s:6:"벨몽";s:4:"user";s:7:"velmont";s:11:"last_change";a:7:{s:4:"date";i:1411731409;s:2:"ip";s:14:"165.194.48.230";s:4:"type";s:1:"E";s:2:"id";s:77:"chapter_13_웹_어플리케이션의_일반적인_구성_및_방명록_구현";s:4:"user";s:7:"velmont";s:3:"sum";s:0:"";s:5:"extra";s:0:"";}s:11:"contributor";a:1:{s:7:"velmont";s:6:"벨몽";}}}