a:2:{s:7:"current";a:9:{s:4:"date";a:2:{s:7:"created";i:1435488619;s:8:"modified";i:1435844950;}s:7:"creator";s:6:"벨몽";s:4:"user";s:7:"velmont";s:11:"last_change";a:7:{s:4:"date";i:1435844950;s:2:"ip";s:14:"165.194.113.10";s:4:"type";s:1:"E";s:2:"id";s:65:"4장_node.js에서_이벤트_리스너_타이머_콜백을_사용";s:4:"user";s:7:"velmont";s:3:"sum";s:0:"";s:5:"extra";s:0:"";}s:11:"contributor";a:1:{s:7:"velmont";s:6:"벨몽";}s:5:"title";s:68:"4장 Node.js에서 이벤트, 리스너, 타이머, 콜백을 사용";s:11:"description";a:2:{s:15:"tableofcontents";a:4:{i:0;a:4:{s:3:"hid";s:63:"장_nodejs에서_이벤트_리스너_타이머_콜백을_사용";s:5:"title";s:68:"4장 Node.js에서 이벤트, 리스너, 타이머, 콜백을 사용";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:1;a:4:{s:3:"hid";s:30:"nodejs_이벤트_모델_이해";s:5:"title";s:31:"Node.js 이벤트 모델 이해";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:2;a:4:{s:3:"hid";s:50:"이벤트_콜백_방식과_스레드_방식_비교";s:5:"title";s:50:"이벤트 콜백 방식과 스레드 방식 비교";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:3;a:4:{s:3:"hid";s:23:"nodejs의_블로킹_i_o";s:5:"title";s:24:"Node.js의 블로킹 I/O";s:4:"type";s:2:"ul";s:5:"level";i:3;}}s:8:"abstract";s:348:"4장 Node.js에서 이벤트, 리스너, 타이머, 콜백을 사용

이번 장에서는 이벤트 기반 모델과 대부분의 웹 서버에서 사용하는 방식인 스레드 기반 모델의 차이점을 알아본다. 이벤트 모델을 이해하면 Node.js의 성능을 증대시킬 수 있는 애플리케이션을 디자인할 수 있다.";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:5:{s:4:"date";a:2:{s:7:"created";i:1435488619;s:8:"modified";i:1435844950;}s:7:"creator";s:6:"벨몽";s:4:"user";s:7:"velmont";s:11:"last_change";a:7:{s:4:"date";i:1435844950;s:2:"ip";s:14:"165.194.113.10";s:4:"type";s:1:"E";s:2:"id";s:65:"4장_node.js에서_이벤트_리스너_타이머_콜백을_사용";s:4:"user";s:7:"velmont";s:3:"sum";s:0:"";s:5:"extra";s:0:"";}s:11:"contributor";a:1:{s:7:"velmont";s:6:"벨몽";}}}