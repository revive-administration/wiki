a:2:{s:7:"current";a:9:{s:4:"date";a:2:{s:7:"created";i:1414295847;s:8:"modified";i:1415321167;}s:7:"creator";s:6:"벨몽";s:4:"user";s:7:"velmont";s:11:"last_change";a:7:{s:4:"date";i:1415321167;s:2:"ip";s:13:"211.187.32.51";s:4:"type";s:1:"E";s:2:"id";s:36:"chapter_2_객체의_생성과_소멸";s:4:"user";s:7:"velmont";s:3:"sum";s:0:"";s:5:"extra";s:0:"";}s:11:"contributor";a:1:{s:7:"velmont";s:6:"벨몽";}s:5:"title";s:36:"CHAPTER 2 객체의 생성과 소멸";s:11:"description";a:2:{s:15:"tableofcontents";a:8:{i:0;a:4:{s:3:"hid";s:36:"chapter_2_객체의_생성과_소멸";s:5:"title";s:36:"CHAPTER 2 객체의 생성과 소멸";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:1;a:4:{s:3:"hid";s:82:"항목1_생성자_대신_static_팩토리_factory_메소드_사용을_고려하자";s:5:"title";s:83:"항목1 생성자 대신 static 팩토리(factory) 메소드 사용을 고려하자";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:2;a:4:{s:3:"hid";s:73:"항목2_생성자의_매개변수가_많을_때는_빌더를_고려하자";s:5:"title";s:73:"항목2 생성자의 매개변수가 많을 때는 빌더를 고려하자";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:3;a:4:{s:3:"hid";s:92:"항목3_private_생성자나_enum_타입을_사용해서_싱글턴의_특성을_유지하자";s:5:"title";s:92:"항목3 private 생성자나 enum 타입을 사용해서 싱글턴의 특성을 유지하자";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:4;a:4:{s:3:"hid";s:81:"항목4_private_생성자를_사용해서_인스턴스_생성을_못하게_하자";s:5:"title";s:81:"항목4 private 생성자를 사용해서 인스턴스 생성을 못하게 하자";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:5;a:4:{s:3:"hid";s:50:"항목5_불필요한_객체의_생성을_피하자";s:5:"title";s:50:"항목5 불필요한 객체의 생성을 피하자";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:6;a:4:{s:3:"hid";s:50:"항목6_쓸모없는_객체_참조를_제거하자";s:5:"title";s:50:"항목6 쓸모없는 객체 참조를 제거하자";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:7;a:4:{s:3:"hid";s:60:"항목7_파이널라이저_finalizer_의_사용을_피하자";s:5:"title";s:60:"항목7 파이널라이저(finalizer)의 사용을 피하자";s:4:"type";s:2:"ul";s:5:"level";i:2;}}s:8:"abstract";s:929:"CHAPTER 2 객체의 생성과 소멸

항목1 생성자 대신 static 팩토리(factory) 메소드 사용을 고려하자

클래스에서는 생성자를 대신하거나, 또는 생성자에 부가하여 static 팩토리 메서드를 가질 수 있다. public 생성자 대신에 static 팩토리 메서드를 제공하면 다음과 같은 장단점이 있다. Static 팩토리 메서드의 한 가지 장점은, 생성자와 달리 자기 나름의 이름을 가질 수 있다는 것이다. Static 팩토리 메서서드의 두 번째 장점은, 생성자와 달리 호출될 때마다 매번 새로운 객체를 생성할 필요가 없다는 것이다. 따라서 immutable 클래스의 경우 이미 생성된 인스턴스를 다시 사용할 수 있으며, 불필요하게 중복된 인스턴스들이 생성되는 것을 방지하기 위해 이미 생성된 인스턴스들을 저장했다가 반복 사용할 수 있다.…";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:5:{s:4:"date";a:2:{s:7:"created";i:1414295847;s:8:"modified";i:1415321167;}s:7:"creator";s:6:"벨몽";s:4:"user";s:7:"velmont";s:11:"last_change";a:7:{s:4:"date";i:1415321167;s:2:"ip";s:13:"211.187.32.51";s:4:"type";s:1:"E";s:2:"id";s:36:"chapter_2_객체의_생성과_소멸";s:4:"user";s:7:"velmont";s:3:"sum";s:0:"";s:5:"extra";s:0:"";}s:11:"contributor";a:1:{s:7:"velmont";s:6:"벨몽";}}}