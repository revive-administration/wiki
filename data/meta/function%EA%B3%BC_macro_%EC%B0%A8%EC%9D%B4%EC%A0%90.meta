a:2:{s:7:"current";a:9:{s:4:"date";a:2:{s:7:"created";i:1457057392;s:8:"modified";i:1457058567;}s:7:"creator";s:6:"벨몽";s:4:"user";s:7:"velmont";s:11:"last_change";a:7:{s:4:"date";i:1457058567;s:2:"ip";s:15:"175.252.169.144";s:4:"type";s:1:"E";s:2:"id";s:27:"function과_macro_차이점";s:4:"user";s:7:"velmont";s:3:"sum";s:0:"";s:5:"extra";s:0:"";}s:11:"contributor";a:1:{s:7:"velmont";s:6:"벨몽";}s:5:"title";s:27:"Function과 Macro 차이점";s:11:"description";a:2:{s:15:"tableofcontents";a:1:{i:0;a:4:{s:3:"hid";s:27:"function과_macro_차이점";s:5:"title";s:27:"Function과 Macro 차이점";s:4:"type";s:2:"ul";s:5:"level";i:1;}}s:8:"abstract";s:263:"Function과 Macro 차이점

So, to sum it up:

Function

• Represents a single unit that is compiled once, and can then be called over and over.

• Does not support latent nodes.

• Has one input execution wire, and one output execution wire (Unless pure).";}s:8:"relation";a:2:{s:5:"media";a:1:{s:32:"kakaotalk_20160304_112506788.png";b:1;}s:10:"firstimage";s:32:"kakaotalk_20160304_112506788.png";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}}s:10:"persistent";a:5:{s:4:"date";a:2:{s:7:"created";i:1457057392;s:8:"modified";i:1457058567;}s:7:"creator";s:6:"벨몽";s:4:"user";s:7:"velmont";s:11:"last_change";a:7:{s:4:"date";i:1457058567;s:2:"ip";s:15:"175.252.169.144";s:4:"type";s:1:"E";s:2:"id";s:27:"function과_macro_차이점";s:4:"user";s:7:"velmont";s:3:"sum";s:0:"";s:5:"extra";s:0:"";}s:11:"contributor";a:1:{s:7:"velmont";s:6:"벨몽";}}}