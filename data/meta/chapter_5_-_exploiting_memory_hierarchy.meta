a:2:{s:7:"current";a:7:{s:4:"date";a:2:{s:7:"created";i:1513000450;s:8:"modified";i:1513000450;}s:7:"creator";s:6:"벨몽";s:4:"user";s:7:"velmont";s:11:"last_change";a:8:{s:4:"date";i:1513000450;s:2:"ip";s:14:"101.235.70.104";s:4:"type";s:1:"C";s:2:"id";s:39:"chapter_5_-_exploiting_memory_hierarchy";s:4:"user";s:7:"velmont";s:3:"sum";s:6:"만듦";s:5:"extra";s:0:"";s:10:"sizechange";i:575;}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:11:"description";a:1:{s:8:"abstract";s:275:"Memory HierarchyFast memories are small, large memories are slowGOAL : “size of the cheapest memory, with speed of fastest memory”Principle of LocalityPrograms use a small part of their memory space frequentlyCachingDirect mapped, Fully associative, M-way set associative";}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:4:{s:4:"date";a:1:{s:7:"created";i:1513000450;}s:7:"creator";s:6:"벨몽";s:4:"user";s:7:"velmont";s:11:"last_change";a:8:{s:4:"date";i:1513000450;s:2:"ip";s:14:"101.235.70.104";s:4:"type";s:1:"C";s:2:"id";s:39:"chapter_5_-_exploiting_memory_hierarchy";s:4:"user";s:7:"velmont";s:3:"sum";s:6:"만듦";s:5:"extra";s:0:"";s:10:"sizechange";i:575;}}}