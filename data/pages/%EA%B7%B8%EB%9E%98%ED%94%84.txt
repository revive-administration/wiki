====== 그래프1 ======
===== 그래프 =====
  * 자료구조의 일종
  * 정점 (Node, Vertex)
  * G = (V,E)로 나타낸다.

==== 경로 ====
  * 정점 A에서 B로 가는 경로

==== 사이클 ====
  * 정점 A에서 다시 A로 돌아오는 경로

==== 단순 경로와 단순 사이클 ====
  * 경로/사이클에서 같은 정점을 두 번 이상 방문하지 않는 경로/사이클
  * 일반적인 의미

==== 방향 있는 그래프 ====
==== 방향 없는 그래프 ====
  * 양방향 그래프라고도 한다

==== 간선 여러개 ====
==== 루프 ====
  * 간선의 양 끝점이 같은 경우 

==== 가중치 ====
==== 차수 ====
  * 정점과 연결되어 있는 간선의 개수

===== 그래프의 표현 =====
==== 그래프의 표현 ====
==== 인접 행렬 ====
  * 정점간 간선이 있는지 여부를 체크

==== 인접 리스트 ====
  * 링크드 리스트를 이용해서 구현

==== 공간 복잡도 ====
  * 인접 행렬 : O(V^2)
  * 인접 리스트 : O(E)

==== 간선 리스트 ====
  * 배열을 이용해서 구현한다
  * 배열을 모두 저장하고 있다.
  * 문제 13023 (푸는중)

===== 그래프의 탐색 ======
==== 그래프의 탐색 ====
  * DFS : 깊이 우선 탐색
  * BFS : 너비 우선 탐색

==== 깊이 우선 탐색 (DFS) ====
  * 스택을 이용해서 갈 수 있는 만큼 최대한 많이 가고
  * 갈 수 없으면 이전 정점으로 돌아간다.

==== 너비 우선 탐색 (BFS) ====
  * 큐를 이용해서 지금 위치에서 갈 수 있는 것을 모두 큐에 넣는 방식
  * 큐에 넣을 때 방문했다고 체크해야 한다.

==== 시간 복잡도 ====
  * 인접 행렬 : O(V^2)
  * 인접 리스트 : O(V+E)

===== 연결 요소 =====
==== 연결 요소 ====
  * 그래프가 나누어져 있지 않은 경우가 있을 수도 있다.
  * 나누어진 각각의 그래프를 연결 요소라고 한다.
  * 연결 요소에 속한 모든 정점을 연결하는 경로가 있어야 한다.

==== 이분 그래프 ====
  * 그래프를 다음과 같이 A와 B로 나눌 수 있으면 이분 그래프라고 한다.
  * A에 포함되어 있는 정점끼리 연결된 간선이 없음
  * B에 포함되어 있는 정점끼리 연결된 간선이 없음
  * 모든 간선의 한 끝 점은 A에, 다른 끝점은 B에

===== 사이클 찾기 =====
==== 순열 사이클 ====
  * 순열이 주어졌을 때, 순열 사이클의 개수를 찾는 문제
  * 문제 10451

==== 반복 수열 ====
  * A와 P가 주어졌을 때, 다음과 같은 수열을 정할 수 있다.
  * D[1] = A
  * D[n] = D[n-1]의 각자리 숫자를 P번 곱한 수의 합
  * A = 57, P=2
  * D[1] = 57
  * D[2] = 5*5, 7*7 = 74
  * ...
  * 문제 2331

===== 플러드 필 =====
==== 플러드 필 ====
  * 어떤 위치와 연결된 모든 위치를 찾는 알고리즘
  * 단지번호 붙이기(2667) 
  * 섬의 개수
  * 미로탐색
  * 토마토
  * 다리붙이기