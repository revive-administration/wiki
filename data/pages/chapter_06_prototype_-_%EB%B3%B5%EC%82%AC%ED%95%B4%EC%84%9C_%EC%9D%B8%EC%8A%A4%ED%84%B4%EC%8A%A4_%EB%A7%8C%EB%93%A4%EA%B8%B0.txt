====== Chapter 06 Prototype - 복사해서 인스턴스 만들기 ======
=====1. Prototype 패턴 =====
new로 인스턴스를 만들 경우에는 클래스 이름을 반드시 지정해야 합니다. 그러나 클래스 이름을 지정하지 않고 인스턴스를 생성할 때도 있습니다. 다음과 같은 경우에는 클래스로부터 인스턴스를 만드는 것이 아니라 인스턴스를 복사해서 새로운 인스턴스를 만듭니다.
  - 종류가 너무 많아 클래스로 정리되지 않는 경우 : 취급하는 오브젝트의 종류가 너무 많아서 각각을 별도의 클래스로 만들어 다수의 소스 파일을 작성해야 하는 경우입니다. \\ \\
  - 클래스로부터 인스턴스 생성이 어려운 경우 : 생성하고 싶은 인스턴스가 복잡한 작업을 거쳐 만들어지기 때문에 클래스로부터 만들기가 매우 어려운 경우입니다. 예를 들어 그래픽 에디터 등에서 사용자가 마우스를 조작해서 만든 도형을 나타내는 인스턴스가 있다고 가정합니다. 사용자의 조작으로 생성되는 인스턴스를 프로그래밍해서 만드는 것은 곤랍합니다. 사용자의 조작으로 만들어진 인스턴스를 다시 만들고 싶을 경우에는 지금 만든 인스턴스를 일단 저장해 두고 만들고 싶은 경우에 그것을 복사합니다. \\ \\
  - framework와 생성할 인스턴스를 분리하고 싶은 경우 : 인스턴스를 생성할 때의 framework를 특정 클래스에 의존하지 않도록 만들고 싶은 경우입니다. 이와 같은 경우에는 클래스 이름을 지정해서 인스턴스를 만드는 것이 아니라 이미 '모형'이 되는 인스턴스를 등록해 두고, 그 인스턴스를 복사해서 인스턴스를 생성합니다.

Prototype은 '원형'이나 '모범'이라는 의미입니다. 원형이 되는 인스턴스, 모범이 되는 인스턴스를 기초로 새로운 인스턴스를 만드는 것입니다.

=====2. 예제 프로그램 =====
^패키지^이름^해설^
|framework |Product | 추상 메서드 use와 createClone이 선언되어 있는 인터페이스 |
| ::: | Manager | createClone을 사용해서 인스턴스를 복제하는 클래스 |
|Anonymous | MessageBox | 문자열을 테두리로 표시하는 클래스, use와 createClone을 구현|
| ::: | UnderlinePen | 문자열에 밑줄을 표시하는 클래스, use와 createClone을 구현 |
| ::: | Main | 동작 테스트용 클래스|
