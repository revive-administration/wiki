====== 3장 부트스트랩 ======
부트스트랩은 네티로 작성한 네트워크 애플리케이션이 시작할 때 가장 처음 수행되는 부분으로서 애플리케이션이 수행할 동작과 각종 설정을 지원하며 네티 애플리케이션의 기본이 된다.

부트스트랩 설정은 크게 이벤트 루프, 채널의 전송 모드, 채널 파이프라인으로 나뉜다. 이벤트 루프는 소켓 채널에서 발생한 이벤트를 처리하는 스레드 모델에 대한 구현이 담겨 있다. 부트스트랩에 설정한 소켓의 모드에 따라 블로킹, 논블로킹 그리고 epoll로 지정할 수 있다. epoll은 입출력 다중화 기법으로써 현재까지 알려진 입출력 방식 중에 가장 빠르다. 마지막으로 채널 파이프라인은 연결된 채널에서 사용할 데이터 핸들러에 대한 내용을 포함한다.

===== 3.1 부트스트랩의 정의 =====
부트스트랩은 네티로 작성한 네트워크 애플리케이션의 동작 방식과 환경을 설정하는 도우미 클래스다. 

===== 3.2 부트스트랩의 구조 =====
통상적으로 네트워크 애플리케이션은 서비스를 제공할 네트워크 포트, 네트워크 전송에 사용할 소켓 모드와 소켓 옵션, 소켓의 데이터를 처리하는 스레드 그리고 애플리케이션에서 사용하는 프로토콜로 구성된다. 네티 부트스트랩은 서버 애플리케이션을 위한 ServerBootstrap 클래스와 클라이언트 애플리케이션을 위한 Bootstrap 클래스로 나뉜다. 네티의 부트스트랩은 소켓 채널에 대한 입출력을 우아하게 추상화함으로써 네티 사용자는 단순히 사용할 입출력 모드에 해당하는 소켓 채널 클래스를 설정하기만 하면 변경이 완료된다.

===== 3.3 ServerBootstrap =====

====3.3.1 ServerBootstrap API ====
=== group - 이벤트 루프 설정 ===
AbstractBootstrap 클래스에 정의된 group 메서드는 하나의 이벤트 루프만 설정하도록 되어있다. 즉 Bootstrap 클래스에서 설정한 이벤트 루프는 클라이언트 소켓의 데이터 입출력만을 담당하게 된다. 서버 애플리케이션을 위한 부트스트랩 클래스인 ServerBootstrap 클래스에서는 group메서드를 재정의하여 부모 스레드 그룹을 설정한다.

=== channel - 소켓 입출력 모드 설정 ===
channel 메서드는 부트스트랩 클래스를 통해서 생성된 채널의 입출력 모드를 설정할 수 있다. 즉, 부트스트랩의 channel 메서드에 등록된 소켓 채널 생성 클래스가 소켓 채널을 생성한다. 


=== channelFactory - 소켓 입출력 모드 설정 ===
channel 메서드와 동일하게 소켓의 입출력 모드를 설저앟는 API다.

=== handler - 서버 소켓 채널의 이벤트 핸들러 설정 ===
handler 메서드를 통해서 등록되는 이벤트 핸들러는 서버 소켓 채널에서 발생하는 이벤트를 수신하여 처리한다.

=== childHandler - 소켓 채널의 데인터 가공 핸들러 설정 ===
클라이언트 소켓 채널로 송수신되는 데이터를 가공하는 데이터 핸들러 설정 메서드이다. 이 메서드를 통해서 등록되는 이벤트 핸들러는 서버에 연결된 클라이언트 소켓 채널에서 발생하는 이벤트를 수신하여 처리한다.

=== option - 서버 소켓 채널의 소켓 옵션 설정 ===
소켓 옵션이란 소켓의 동작 방식을 지정하는 것을 말한다. 데이터를 전송할 socket.send 메서드가 호출되면 해당 코드는 커널의 시스템 함수를 호출한다. 시스템 함수는 애플리케이션에서 수신한 데이터를 데이터 송신용 커널 버퍼에 쌓아두었다가 인터넷을 통해서 전송한다. 각 옵션은 송,수신 버퍼의 크기를 지정하는데 사용한다.

네이글 알고리즘은 '가능하면 데이터를 나누어 보내지 말고 한꺼번에 보내라'라는 원칙을 기반으로 만드렁진 알고리즘이다. 이런 동작 방식 덕분에 네트워크 상태가 좋지 않고 대역폭이 좁을 때 네트워크를 효율적으로 사용할 수 있다. 


=== childOption - 소켓 채널의 소켓 옵션 설정 ===
option 메서드는 서버 소켓 채널의 옵션을 설정하는데 반해 childOption 메서드는 서버에 접속한 클라이언트 소켓 채널에 대한 옵션을 설정하는데 사용한다.

==== 3.3.2 Bootstrap API ====

=====3.4 마치며 =====
부트스트랩은 네트워크 애플리케이션의 동작 방식에 대한 설정을 담당하며 클라이언트 애플리케이션을 위한 Bootstrap 클래스와 서버 애플리케이션을 위한 ServerBootstrap 클래스로 나뉜다. 