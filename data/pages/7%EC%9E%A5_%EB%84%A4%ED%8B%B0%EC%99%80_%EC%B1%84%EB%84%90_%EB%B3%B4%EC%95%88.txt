====== 7장 네티와 채널 보안 ======
===== 7.1 보안 대상과 범위 =====
===== 7.2 네트워크 데이터 캡쳐 =====
네트워크로 전송된 데이터를 가로채는 것을 네트워크 데이터캡쳐라고 부른다. 네트워크 데이터를 캡쳐하는 방법은 크게 3가지다. 첫번째로 TCP DUMP 계열의 네트워크 분석 도구를 사용하는 방법이다. 두번째로 브라우저가 제공하는 부가 기능이나 브라우저의 플러그인으로 지원되는 도구 등을 사용하여 애플리케이션에서 전송하는 데이터를 수집하는 방법이 있는데 파이어폭스의 파이어버그나 크롬의 개발자 도구가 이에 해당한다. 마지막으로 HTTP 및 HTTPS와 같이 특정한 프로토콜에 해당하는 데이터만을 수집하는 도구가 있다. 

==== 7.2.1 HTTP 데이터 캡쳐 ====
피들러는 브라우저의 프록시 설정에 자신의 서비스 포트를 등록하여 프록시로 동작한다. 이와 같은 동작 방식을 포워드 프록시라고한다. 포워드 프록시는 클라이언트가 요청한 프로토콜을 대신 수행하고 결과를 클라이언트로 돌려준다. 포워드 프록시를 사용하는 클라이언트는 자신이 프록시를 통해서 데이터를 요청한다는 사실을 알 수 없다.

리버스 프록시는 클라이언트가 요청한 프로토콜을 자신이 처리하지 않고 다른 서버가 수행하도록 포워딩한다. 

==== 7.2.2 TCP 데이터 캡쳐 ====
==== 7.3.1 대칭키/비대칭키 암호화 ====
==== 7.3.2 SSL/TLS ====
===== 7.4 SSL 인증서 =====
네티 서버에 TLS 프로토콜을 적용하려면 공개키 암호화에서 사용되는 인증서가 필요하다.

==== 7.4.1 Open SSL 설치 - 윈도우 ====
==== 7.4.3 인증서 생성 ====
^암호화 알고리즘 ^ 설명^
|DES | 70년대에 미국의 암호화 표준 알고리즘, 64비트 블록 암호화 알고리즘이다 |
| IDEA | 128비트 암호화 알고리즘이며 des에 비해 2배 빠르고 무작위 대입공격에 강하다 |
| AES128, 192, 256 | DES와 3DES를 대체하기 위해 표준으로 채택하였다. 알고리즘 뒤의 숫자는 암호화에 사용되는 비트 수를 의미한다|
개인키가 생성되었으니 공개키를 생성할 차례다. 인증서 서명 요청을 위한 CSR 파일을 생성할 때 자동으로 공개키가 생성되어 포함한다.

이제 CSR에 전자서명을 하여 인증서를 만들어보자.

전사서명을 사용하여 인증서의 생성이 완료되었으니 생성된 인증서가 정상적인지 확인해보자.


===== 7.5 네티에 채널 보안 적용하기 =====
네티에 SSL/TLS 연결을 적용하는 방법은 매우 간단하다. 부트 스트랩을 생성할대 앞에서 생성한 인증서와 개인키로 네티의 SslContext 인스턴스를 생성하고 채널 파이프라인의 가장 앞쪽에 SslContext로부터 생성한 SslHandler를 등록해주면 된다. 

==== 7.5.1 암호화된 데이터 캡쳐 ====

