====== 3장 JUnit 마스터하기 ======
===== 3.1 컨트롤러 컴포넌트 소개 =====
Core Java EE 패턴에 따르면 컴포넌트로서의 컨트롤러는 '클라이언트와 상호작용하며, 각 요청 처리를 제어하고 관리'한다. 그리고 표현 계층과 비즈니스 계층 패턴 모두에 사용된다. 일반적으로 컨트롤러는 다음과 같은 일들을 처리한다.
  * 요청 수락
  * 요청에 따른 공통 연산 수행
  * 적절한 요청 핸들러 선택
  * 핸들러가 관련 비즈니스 로직을 수행할 수 있도록 요청 라우팅(routing)
  * 오류나 예외 처리를 위한 최상위 핸들러 제공

==== 3.1.1 인터페이스 설계하기 ====
컨트롤러의 설명을 곰곰히 들여다보면 필수 객체 네 개가 드러나는데, 바로 요청, 응답, 요청 핸들러, 컨트롤러이다. 요청하고, 요청 핸들러에 전달하고, 응답 객체를 반환한다. 이 요구사항에 맞춰 아래와 같은 간단한 인터페이스를 작성해보았다.

	public interface Request{
		String getName();
	}
  
	public interface Response{
  
	}
  
	public interface RequestHandler{
		Response process(Request request) throws Exception;
	}
  
	public interface Controller{
		Response processRequest(Request request);
		void addHandler(Request request, RequestHandler requestHandler);
	}